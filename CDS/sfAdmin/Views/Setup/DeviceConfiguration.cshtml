@{
    ViewBag.Title = "DeviceConfiguration";
}

<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Device Configuration]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewDeviceConfigButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="deviceConfigListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Name]]]</th>
                        <th>[[[Data Type]]]</th>
                        <th>[[[Description]]]</th>
                        <th>[[[Default Value]]]</th>

                    </tr>
                </thead>

                <tbody id="DeviceConfigList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->

<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Detail]]]</h4>
                </div>
                <div style="float:right">
                    <button id="DeleteDeviceConfigButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateDeviceConfigButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewDeviceConfigButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewDeviceConfigButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>

            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        
                        <div class="col-sm-10">
                            <form id="factory-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="deviceConfigName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="deviceConfigDescription" class="col-sm-3 control-label">
                                            [[[Description]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <textarea id="deviceConfigDescription" class="form-control" rows="5"></textarea>
                                        </div>
                                    </div>
                                    
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cCultureInfoId" class="col-sm-3 control-label">[[[Data Type]]]</label>
                                        <div class="col-sm-9">
                                            <select id="deviceConfigDataType" class="form-control">
                                                <option value="string" selected="selected">string</option>
                                                <option value="numeric">numeric</option>
                                                <option value="bool">bool</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cDescription" class="col-sm-3 control-label">
                                            [[[Default Value]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <textarea id="deviceConfigDefaultValueString" class="form-control" rows="5"></textarea>
                                            <input id="deviceConfigDefaultValueNumeric" type="number" step=any min=0 class="form-control" placeholder="[[[number]]]" style="display:none;">
                                            <select id="deviceConfigDefaultValueBool" class="form-control" style="display:none;">
                                                <option value="true" selected="selected">true</option>
                                                <option value="false">false</option>
                                            </select>
                                        </div>

                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->

<script type="text/javascript">
    var _deviceConfigJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.DeviceConfigInCompanyList'));
    var _selectedDeviceConfigId = -1;


    var _permissions = [@ViewBag.PermissionList];


    function LoadDeviceConfigListIntoTable() {

        var deviceConfigDataSet = $('#datatable-responsive').DataTable();
        deviceConfigDataSet.clear().draw(false);

        for (var i in _deviceConfigJSONObjs) {
            deviceConfigDataSet.row.add([
                parseInt(i) + 1,
                _deviceConfigJSONObjs[i].Name,
                _deviceConfigJSONObjs[i].DataType,
                _deviceConfigJSONObjs[i].Description,
                _deviceConfigJSONObjs[i].DefaultValue,
                
            ]).draw(false);
        }
        deviceConfigDataSet.columns.adjust().draw();
    }



    function CleanFormInput() {
        $("#deviceConfigName").val('');
        $('#deviceConfigDescription').val('');
        $('#deviceConfigDataType').val('string');
        $("#deviceConfigDataType").change();
    }

    function RefreshDeviceConfigTable() {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getdeviceConfigInCompany" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _deviceConfigJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadDeviceConfigListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }

    function OnSelectDeviceConfigItem(DeviceConfigId) {
        $('#panel_detail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        _selectedDeviceConfigId = DeviceConfigId;
        CleanFormInput();
        for (var i in _deviceConfigJSONObjs) {
            if (_deviceConfigJSONObjs[i].Id == _selectedDeviceConfigId) {
                $('#deviceConfigName').val(_deviceConfigJSONObjs[i].Name);
                $('#deviceConfigDescription').val(_deviceConfigJSONObjs[i].Description);
                $('#deviceConfigDataType').val(_deviceConfigJSONObjs[i].DataType);
                $("#deviceConfigDataType").change();
                $('#deviceConfigDefaultValueString').val(_deviceConfigJSONObjs[i].DefaultValue);
                $('#deviceConfigDefaultValueNumeric').val(_deviceConfigJSONObjs[i].DefaultValue);
                $('#deviceConfigDefaultValueBool').val(_deviceConfigJSONObjs[i].DefaultValue);
                break;
            }
        }

    }

    function DoDeviceConfigTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Setup/ReqAction?action=" + actionName;
        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshDeviceConfigTable();
                _selectedDeviceConfigId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401)
                {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }
    //function checkPermission() {
    //    var piority = -1;
    //    for (var i in _permissions) {
    //        if (_permissions[i] == 0) {  //Admin
    //            piority = 2;
    //            break;
    //        }
    //        if (_permissions[i] == 10) {  //Factory View
    //            piority = 1;
    //        }
    //        if (_permissions[i] == 11) {  //Factory Edit
    //            piority = 2;
    //            break;
    //        }
    //    }
    //    if (piority == 1) {  //only View
    //        $('#DeleteFactoryButton').css("display", "none");
    //        $('#UpdateFactoryButton').css("display", "none");
    //        $('#SubmitNewFactoryButton').css("display", "none");
    //        $('#AddNewFactoryButton').css("display", "none");
    //    }

    //}

    TableManageButtons.init();
   // checkPermission();
    LoadDeviceConfigListIntoTable();

    $(document).ready(function () {
        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #DeviceConfigList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectDeviceConfigItem(_deviceConfigJSONObjs[table.row(this).index()].Id);
        });
        $("input#deviceConfigName").on({
            keydown: function (e) {
                if (e.which === 32)
                    return false;
            },
            change: function () {
                this.value = this.value.replace(/\s/g, "");
            }
        });
        $("#deviceConfigDataType").change(function () {          
            $("#deviceConfigDefaultValueString").val('');
            $("#deviceConfigDefaultValueNumeric").val('');
            $("#deviceConfigDefaultValueBool").val('true');

            switch ($('#deviceConfigDataType').val()) {
                case "string":
                    $("#deviceConfigDefaultValueString").css("display", "block");
                    $("#deviceConfigDefaultValueNumeric").css("display", "none");
                    $("#deviceConfigDefaultValueBool").css("display", "none");
                    break;
                case "numeric":
                    $("#deviceConfigDefaultValueString").css("display", "none");
                    $("#deviceConfigDefaultValueNumeric").css("display", "block");
                    $("#deviceConfigDefaultValueBool").css("display", "none");
                    break;
                case "bool":
                    $("#deviceConfigDefaultValueString").css("display", "none");
                    $("#deviceConfigDefaultValueNumeric").css("display", "none");
                    $("#deviceConfigDefaultValueBool").css("display", "block");
                    break;
                default:
                    break;
            }
        });

        function dataValidation(postData) {
           
            if ($("#deviceConfigName").val().length != 0) {
                postData.append('Name', $("#deviceConfigName").val());
            } else {
                $("#deviceConfigName").focus();
                swal("[[[Invalid]]] !", "[[[Name]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            if ($("#deviceConfigDescription").val().length != 0)
                postData.append('Description', $("#deviceConfigDescription").val());

            postData.append('DataType', $("#deviceConfigDataType").val());
            if ($("#deviceConfigDataType").val()=="string") postData.append('DefaultValue', $("#deviceConfigDefaultValueString").val());
            if ($("#deviceConfigDataType").val() == "numeric") postData.append('DefaultValue', $("#deviceConfigDefaultValueNumeric").val());
            else postData.append('DefaultValue', $("#deviceConfigDefaultValueBool").val());
            return {
                postData: postData,
                isValidated: true
            }
        }

        $('#AddNewDeviceConfigButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[Add New Device Configuration]]]");
            $('#DeleteDeviceConfigButton').css("display", "none");
            $('#UpdateDeviceConfigButton').css("display", "none");
            $('#CancelAddNewDeviceConfigButton').css("display", "inline");

            $('#SubmitNewDeviceConfigButton').css("display", "inline");

            $('#AddNewDeviceConfigButton').css("display", "none");
            CleanFormInput();
            $("#deviceConfigName").focus();
        });

        $('#CancelAddNewDeviceConfigButton').click(function () {
            $('#panel_detail').css("display", "none");
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteDeviceConfigButton').css("display", "inline");
            $('#UpdateDeviceConfigButton').css("display", "inline");
            $('#CancelAddNewDeviceConfigButton').css("display", "none");
            $('#SubmitNewDeviceConfigButton').css("display", "none");

            $('#AddNewDeviceConfigButton').css("display", "inline");
            CleanFormInput();
            window.scrollTo(0, 0);
        });

        $('#SubmitNewDeviceConfigButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoDeviceConfigTransactionAjax("adddeviceconfig", -1, result.postData);
                        $('#panel_detail').css("display", "none");
                        $('#EditingPanelTitle').html("[[[Detail]]]");
                        $('#DeleteDeviceConfigButton').css("display", "inline");
                        $('#UpdateDeviceConfigButton').css("display", "inline");
                        $('#CancelAddNewDeviceConfigButton').css("display", "none");
                        $('#SubmitNewDeviceConfigButton').css("display", "none");

                        $('#AddNewDeviceConfigButton').css("display", "inline");

                        CleanFormInput();
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteDeviceConfigButton').click(function () {
            if (_selectedDeviceConfigId < 0)
                toastr["error"]("[[[No Device Configuration Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoDeviceConfigTransactionAjax("deletedeviceconfig", _selectedDeviceConfigId, null);
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#UpdateDeviceConfigButton').click(function () {
            if (_selectedDeviceConfigId < 0)
                toastr["error"]("[[[No Device Configuration Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if(result.isValidated){
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            DoDeviceConfigTransactionAjax("updatedeviceconfig", _selectedDeviceConfigId, result.postData);
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
    });
</script>
