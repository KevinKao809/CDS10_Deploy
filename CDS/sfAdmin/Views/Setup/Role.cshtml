@using Newtonsoft.Json;
@{
    ViewBag.Title = "Setup / Role";
}

<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Setup]]] / [[[Role]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewRoleButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Role]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="roleListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Role]]] [[[Name]]]</th>
                        <th>[[[Permission]]]</th>
                    </tr>
                </thead>
                <tbody id="RoleList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">Detail</h4>
                </div>
                <div style="float:right">
                    <button id="DeleteRoleButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateRoleButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewRoleButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewRoleButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-6">
                    </div>

                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-1 text-left">                           
                        </div>
                        <div class="col-sm-10">
                            <form id="role-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-11">
                                    <div class="form-group">
                                        <label for="inputName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="cName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputShortName" class="col-sm-3 control-label">
                                            [[[Permission]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <div style="float:left">
                                                [[[Granted Permissions]]]
                                                <br>
                                                <select size="5" id="selectGrant" style="width:auto; height:200px; min-width: 100px;"></select>
                                            </div>
                                            <div style="float:left">
                                                <i class="zmdi zmdi-swap" style="margin-top:95px; margin-left:10px; margin-right:10px;"></i>
                                            </div>
                                            <div style="float:left">
                                                [[[Available Permissions]]]
                                                <br>
                                                <select size="5" id="selectAvailable" style="width:auto; height:200px; min-width: 100px;"></select>    
                                            </div>
                                        </div>
                                    </div>                                    
                                </div>
                                <div class="col-sm-5 col-sm-offset-1">
                                </div>
                                <div class="col-sm-5 col-sm-offset-1">                                    
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-5">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->

<script type="text/javascript">
    var _roleJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.RoleList'));
    var _permissionCatlogJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.PermissionCatlog'));
    var _selectedRoleId = -1;

    //console.log(_roleJSONObjs);
    function LoadRoleListIntoTable() {

        var roleDataSet = $('#datatable-responsive').DataTable();
        roleDataSet.clear();

        for (var i in _roleJSONObjs) {
            var permissions = "";
            for (var index in _roleJSONObjs[i].PermissionCatalogList) {
                permissions += _roleJSONObjs[i].PermissionCatalogList[index].Name + ", ";
            }
            roleDataSet.row.add([
                parseInt(i) + 1,
                _roleJSONObjs[i].Name,
                permissions,
            ]).draw(false);
        }
        roleDataSet.columns.adjust().draw();
    }

    function LoadPermissionCatlogIntoObjectsd() {
        for (var key in _permissionCatlogJSONObjs) {
            $("#selectAvailable").append("<option value='" + _permissionCatlogJSONObjs[key].Id + "'>" + _permissionCatlogJSONObjs[key].Name + "</option>");
        }
    }

    function CleanFormInput() {
        $("#cName").val('');
        $("#selectAvailable").empty();
        $("#selectGrant").empty();
        LoadPermissionCatlogIntoObjectsd();
    }

    function RefreshRoleTable() {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getuserrole",
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _roleJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadRoleListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function OnSelectRoleItem(roleId) {
        $('#panel_detail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        _selectedRoleId = roleId;
        CleanFormInput();
        for (var i in _roleJSONObjs) {
            if (_roleJSONObjs[i].Id == _selectedRoleId) {
                $('#cName').val(_roleJSONObjs[i].Name);
                for (var index in _roleJSONObjs[i].PermissionCatalogList) {
                    $("#selectGrant").append("<option value='" + _roleJSONObjs[i].PermissionCatalogList[index].Id + "'>" + _roleJSONObjs[i].PermissionCatalogList[index].Name + "</option>");
                    $(eval("\"#selectAvailable option[value='" + _roleJSONObjs[i].PermissionCatalogList[index].Id + "']\"")).remove();
                }
                break;
            }
        }
    }

    function DoRoleTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Setup/ReqAction?action=" + actionName;
        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshRoleTable();
                _selectedRoleId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    TableManageButtons.init();

    LoadRoleListIntoTable();

    LoadPermissionCatlogIntoObjectsd();

    $(document).ready(function () {
        $("#selectAvailable").change(function () {
            var text = $("#selectAvailable").find("option:selected").text();
            var value = $("#selectAvailable").val();
            $("#selectGrant").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectAvailable").find("option:selected").remove();
        });

        $("#selectGrant").change(function () {
            var text = $("#selectGrant").find("option:selected").text();
            var value = $("#selectGrant").val();
            $("#selectAvailable").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectGrant").find("option:selected").remove();
        });

        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #RoleList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectRoleItem(_roleJSONObjs[table.row(this).index()].Id);
        });

        function dataValidation(postData) {
            if ($("#cName").val().length != 0) {
                postData.append('Name', $("#cName").val());
            } else {
                $("#cName").focus();
                swal("[[[Invalid]]] !", "[[[Name]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            // Add Permission
            var grantPermissions = document.getElementById('selectGrant').options;
            for (var i=0; i<grantPermissions.length; i++) {
                postData.append('PermissionCatalogId', grantPermissions[i].value);
            }

            return {
                postData: postData,
                isValidated: true
            }
        }

        $('#AddNewRoleButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[Add New]]] [[[Role]]]");
            $('#DeleteRoleButton').css("display", "none");
            $('#UpdateRoleButton').css("display", "none");
            $('#CancelAddNewRoleButton').css("display", "inline");

            $('#SubmitNewRoleButton').css("display", "inline");

            $('#AddNewRoleButton').css("display", "none");
            CleanFormInput();
            $("#cName").focus();
        });

        $('#CancelAddNewRoleButton').click(function () {
            $('#panel_detail').css("display", "none");
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteRoleButton').css("display", "inline");
            $('#UpdateRoleButton').css("display", "inline");
            $('#CancelAddNewRoleButton').css("display", "none");
            $('#SubmitNewRoleButton').css("display", "none");

            $('#AddNewRoleButton').css("display", "inline");
            CleanFormInput();
            window.scrollTo(0, 0);
        });

        $('#SubmitNewRoleButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoRoleTransactionAjax("adduserrole", -1, result.postData);

                        $('#panel_detail').css("display", "none");
                        $('#EditingPanelTitle').html("[[[Detail]]]");
                        $('#DeleteRoleButton').css("display", "inline");
                        $('#UpdateRoleButton').css("display", "inline");
                        $('#CancelAddNewRoleButton').css("display", "none");
                        $('#SubmitNewRoleButton').css("display", "none");

                        $('#AddNewRoleButton').css("display", "inline");

                        CleanFormInput();
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteRoleButton').click(function () {
            if (_selectedRoleId < 0)
                toastr["error"]("[[[No Role Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoRoleTransactionAjax("deleteuserrole", _selectedRoleId, null);
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#UpdateRoleButton').click(function () {
            if (_selectedRoleId < 0)
                toastr["error"]("[[[No Role Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            DoRoleTransactionAjax("updateuserrole", _selectedRoleId, result.postData);
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
    });

</script>

