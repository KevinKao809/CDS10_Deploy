
@{
    ViewBag.Title = "Setup / External Application";
}
<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Setup]]] / [[[External Application]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewExternalApplicationButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Application]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="externalApplicationListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Name]]]</th>
                        <th>[[[Target]]]</th>
                        <th>[[[ServiceURL]]]</th>
                        <th>[[[Method]]]</th>
                    </tr>
                </thead>
                <tbody id="ExternalApplicationList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Detail]]]</h4>
                </div>
                <div style="float:right">
                    <button id="DeleteExternalApplicationButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateExternalApplicationButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewExternalApplicationButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewExternalApplicationButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                        </div>
                        <div class="col-sm-10">
                            <form id="externalApplication-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="exName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="exName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exDescription" class="col-sm-3 control-label">
                                            [[[Description]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <textarea id="exDescription" class="form-control" rows="4" placeholder="[[[Description]]]"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exTarget" class="col-sm-3 control-label">[[[Target]]](*)</label>
                                        <div class="col-sm-9">
                                            <div class="radio radio-info radio-inline">
                                                <input type="radio" id="RadioExternal" value="External" name="exTarget" checked>
                                                <label for="RadioExternal"> [[[External]]] </label>
                                            </div>
                                            <div class="radio radio-info radio-inline">
                                                <input type="radio" id="RadioDashboard" value="Dashboard" name="exTarget">
                                                <label for="RadioDashboard"> [[[Dashboard]]] </label>
                                            </div>
                                            <div class="radio radio-info radio-inline">
                                                <input type="radio" id="RadioIoTDevice" value="IoT Device" name="exTarget">
                                                <label for="RadioIoTDevice"> [[[IoT Device]]] </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="serviceURL_URL" class="form-group" style="display:inline">
                                        <label for="exServiceURL" class="col-sm-3 control-label">[[[ServiceURL]]](*)</label>
                                        <div class="col-sm-9">
                                            <input id="exServiceURL" type="text" class="form-control" required>
                                        </div>
                                    </div>
                                    <div id="serviceURL_IoTDevice" class="form-group" style="display:none">
                                        <label for="exIoTDeviceList" class="col-sm-3 control-label">[[[IoT Device]]](*)</label>
                                        <div class="col-sm-9">
                                            <select id="exIoTDeviceList" step=any min=0 class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exMethod" class="col-sm-3 control-label">[[[Method]]](*)</label>
                                        <div class="col-sm-9">
                                            <select id="exMethod" class="form-control">
                                                <option value="POST-x-www">POST x-www-form-urlencoded</option>
                                                <option value="POST-multi">POST multipart/form-data</option>
                                                <option value="POST-json">POST application/json</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exAuthType" class="col-sm-3 control-label">[[[Auth]]] [[[Type]]](*)</label>
                                        <div class="col-sm-9">
                                            <select id="exAuthType" step=any min=0 class="form-control">
                                                <option value="None">None</option>
                                                <option value="Basic Auth">Basic Auth</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="exMessageTemplate" class="col-sm-3 control-label">[[[Output Template]]]</label>
                                        <div class="col-sm-9">
                                            <textarea id="exMessageTemplate" class="form-control" rows="5"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exAuthID" class="col-sm-3 control-label">[[[Auth]]] ID</label>
                                        <div class="col-sm-9">
                                            <input id="exAuthID" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exAuthPW" class="col-sm-3 control-label">
                                            [[[Auth]]] [[[PW]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="exAuthPW" type="password" class="form-control">
                                        </div>
                                    </div>
                                    <!--
                                    <div class="form-group">
                                        <label for="TokenURL" class="col-sm-3 control-label">
                                            [[[Token]]] URL
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="exTokenURL" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="HeaderValues" class="col-sm-3 control-label">
                                            [[[Header Values]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="exHeaderValues" type="text" class="form-control">
                                        </div>
                                    </div>
                                    -->
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-5">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
<script type="text/javascript">
    var _externalApplicationJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.ExternalApplicationList'));
    var _selectedExternalApplicationId = -1;
    var _outputTemplateDefaultValue = jsonStringFilter('@ViewBag.MessageOutputDefaultValue');
    var _iotDeviceJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.IoTDeviceList'));

    function LoadExternalApplicationListIntoTable() {

        var externalApplicationDataSet = $('#datatable-responsive').DataTable();
        externalApplicationDataSet.clear();
        //construct table
        for (var i in _externalApplicationJSONObjs) {
            console.log(_externalApplicationJSONObjs[i].Name);
            externalApplicationDataSet.row.add([
                parseInt(i) + 1,
                _externalApplicationJSONObjs[i].Name,
                _externalApplicationJSONObjs[i].TargetType,
                _externalApplicationJSONObjs[i].ServiceURL,
                _externalApplicationJSONObjs[i].Method
            ]).draw(false);
        }
        externalApplicationDataSet.columns.adjust().draw();
    }

    function LoadIoTDeviceListIntoSelection() {
        var options = "";
        for (var i in _iotDeviceJSONObjs) {
            options += "<option value='" + _iotDeviceJSONObjs[i].IoTHubDeviceId + "'>" + _iotDeviceJSONObjs[i].IoTHubDeviceId + " (" + _iotDeviceJSONObjs[i].FactoryName + ")</option>"
        }
        document.getElementById("exIoTDeviceList").innerHTML = options;
    }

    function CleanFormInput() {
        $("#exName").val('');
        $('#exDescription').val('');
        $('#exMethod').val('POST');
        $('#RadioExternal').click();
        $('#exServiceURL').val('');
        $('#exAuthType').val('None');
        $('#exMessageTemplate').val('');
        $("#exAuthID").val('');
        $("#exAuthPW").val('');
        //$("#exTokenURL").val('');
        //$("#exHeaderValues").val('');
        $('#exAuthType').change();

    }

    function RefreshExternalApplicationTable() {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getexternalapplication" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _externalApplicationJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadExternalApplicationListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function OnSelectExternalApplicationItem(externalApplicationId) {
        $('#panel_detail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");

        _selectedExternalApplicationId = externalApplicationId;
        CleanFormInput();

        for (var i in _externalApplicationJSONObjs) {
            if (_externalApplicationJSONObjs[i].Id == _selectedExternalApplicationId) {
                $("#exName").val(_externalApplicationJSONObjs[i].Name);
                $('#exDescription').val(_externalApplicationJSONObjs[i].Description);
                $('#exMethod').val(_externalApplicationJSONObjs[i].Method);

                $('#exAuthType').val(_externalApplicationJSONObjs[i].AuthType);
                if (_externalApplicationJSONObjs[i].MessageTemplate != null)
                    $('#exMessageTemplate').val(JSON.stringify(_externalApplicationJSONObjs[i].MessageTemplate));
                $("#exAuthID").val(_externalApplicationJSONObjs[i].AuthID);
                $("#exAuthPW").val(_externalApplicationJSONObjs[i].AuthPW);
                //$("#exTokenURL").val(_externalApplicationJSONObjs[i].TokenURL);
                //$("#exHeaderValues").val(_externalApplicationJSONObjs[i].HeaderValues);
                $('#exAuthType').change();

                switch (_externalApplicationJSONObjs[i].TargetType) {
                    case 'External':
                        $('#exServiceURL').val(_externalApplicationJSONObjs[i].ServiceURL);
                        $('#RadioExternal').click();
                        break;
                    case 'Dashboard':
                        $('#RadioDashboard').click();
                        break;
                    case 'IoT Device':
                        $('#exIoTDeviceList').val(_externalApplicationJSONObjs[i].ServiceURL);
                        $('#RadioIoTDevice').click();
                        break;
                }
                break;
            }
        }
    }


    function DoExternalApplicationTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Setup/ReqAction?action=" + actionName;

        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshExternalApplicationTable();
                _selectEdexternalApplicationId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }


    TableManageButtons.init();

    LoadExternalApplicationListIntoTable();

    LoadIoTDeviceListIntoSelection();

    $(document).ready(function () {

        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #ExternalApplicationList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectExternalApplicationItem(_externalApplicationJSONObjs[table.row(this).index()].Id);
            SwitchToViewMode();
        });
        $('#RadioExternal').click(function () {
            $('#serviceURL_URL').css("display", "inline");
            $('#serviceURL_IoTDevice').css("display", "none");
            document.getElementById('exServiceURL').disabled = false;
            document.getElementById('exMethod').disabled = false;
            document.getElementById('exAuthType').disabled = false;
            document.getElementById('exMessageTemplate').disabled = false;
            document.getElementById('exAuthID').disabled = false;
            document.getElementById('exAuthPW').disabled = false;
            //document.getElementById('exTokenURL').disabled = false;
            //document.getElementById('exHeaderValues').disabled = false;
        });

        $('#RadioDashboard').click(function () {
            $('#serviceURL_URL').css("display", "inline");
            $('#serviceURL_IoTDevice').css("display", "none");
            document.getElementById('exServiceURL').disabled = true;
            document.getElementById('exMethod').disabled = true;
            document.getElementById('exAuthType').disabled = true;
            document.getElementById('exMessageTemplate').disabled = true;
            document.getElementById('exAuthID').disabled = true;
            document.getElementById('exAuthPW').disabled = true;
            //document.getElementById('exTokenURL').disabled = true;
            //document.getElementById('exHeaderValues').disabled = true;
        });

        $('#RadioIoTDevice').click(function () {
            $('#serviceURL_URL').css("display", "none");
            $('#serviceURL_IoTDevice').css("display", "inline");
            document.getElementById('exServiceURL').disabled = true;
            document.getElementById('exMethod').disabled = true;
            document.getElementById('exAuthType').disabled = true;
            document.getElementById('exMessageTemplate').disabled = false;
            document.getElementById('exAuthID').disabled = true;
            document.getElementById('exAuthPW').disabled = true;
            //document.getElementById('exTokenURL').disabled = true;
            //document.getElementById('exHeaderValues').disabled = true;
        });


        $('#exAuthType').change(function () {
            if ($('#exAuthType').val() == "None") {
                $("#exAuthID").val('');
                $("#exAuthPW").val('');
                //$("#exTokenURL").val('');
                //$("#exHeaderValues").val('');
                document.getElementById('exAuthID').disabled = true;
                document.getElementById('exAuthPW').disabled = true;
                //document.getElementById('exTokenURL').disabled = true;
                //document.getElementById('exHeaderValues').disabled = true;
            }
            else {
                document.getElementById('exAuthID').disabled = false;
                document.getElementById('exAuthPW').disabled = false;
                //document.getElementById('exTokenURL').disabled = false;
                //document.getElementById('exHeaderValues').disabled = false;
            }
        });
        function dataValidation(postData) {
            if ($("#exName").val().length != 0) {
                postData.append('Name', $("#exName").val());
            } else {
                $("#exName").focus();
                swal("[[[Invalid]]] !", "[[[Name]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            postData.append('Description', $("#exDescription").val());

            var targetType = $('input[name="exTarget"]:checked').val();
            postData.append('TargetType', targetType);

            if (targetType == "External") {
                if ($("#exServiceURL").val().length != 0) {
                    postData.append('ServiceURL', $("#exServiceURL").val());
                } else {
                    $("#exServiceURL").focus();
                    swal("[[[Invalid]]] !", "[[[ServiceURL]]] [[[is necessary]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }

                if ($("#exMethod").val().length != 0) {
                    postData.append('Method', $("#exMethod").val());
                } else {
                    $("#exMethod").focus();
                    swal("[[[Invalid]]] !", "[[[Method]]] [[[is necessary]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }

                if ($("#exAuthType").val() != null) {
                    postData.append('AuthType', $("#exAuthType").val());
                    if ($("#exAuthType").val() == "Basic Auth")
                    {
                        if ($("#exAuthID").val().length == 0 || $("#exAuthPW").val().length == 0)
                        {
                            $("#exAuthID").focus();
                            swal("[[[Invalid]]] !", "[[[Auth ID / PW]]] [[[is necessary]]].");
                            return {
                                postData: postData,
                                isValidated: false
                            };
                        }
                    }
                } else {
                    $("#exAuthType").focus();
                    swal("[[[Invalid]]] !", "[[[AuthType]]] [[[is necessary]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
            } else if (targetType == "IoT Device") {
                if ($("#exIoTDeviceList").val().length != 0) {
                    postData.append('ServiceURL', $("#exIoTDeviceList").val());
                } else {
                    $("#exIoTDeviceList").focus();
                    swal("[[[Invalid]]] !", "[[[IoT Device]]] [[[is necessary]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
                postData.append('Method', 'POST');
                postData.append('AuthType', 'IoT Device');
            } else if (targetType == "Dashboard")
            {
                postData.append('ServiceURL', 'Dashboard');
                postData.append('MessageTemplate', '');
                postData.append('Method', 'POST');
                postData.append('AuthType', 'Dashboard');
            }


            if (targetType != "Dashboard") {
                if (sfIsJson($("#exMessageTemplate").val())) {
                    postData.append('MessageTemplate', $("#exMessageTemplate").val());
                } else {
                    $("#exMessageTemplate").focus();
                    swal("[[[Invalid]]] !", "[[[Not an valid JSON Content]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
            }

            postData.append('AuthID', $("#exAuthID").val());
            postData.append('AuthPW', $("#exAuthPW").val());
            //postData.append('TokenURL', $("#exTokenURL").val());
            //postData.append('HeaderValues', $("#exHeaderValues").val());

            return {
                postData: postData,
                isValidated: true
            }
        }
        function SwitchToViewMode() {
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteExternalApplicationButton').css("display", "inline");
            $('#UpdateExternalApplicationButton').css("display", "inline");
            $('#AddNewExternalApplicationButton').css("display", "inline");
            $('#CancelAddNewExternalApplicationButton').css("display", "none");
            $('#SubmitNewExternalApplicationButton').css("display", "none");

            $('#collapseDetail').css("display", "inline");

        }

        $('#AddNewExternalApplicationButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[New]]] [[[External Application]]]");
            $('#DeleteExternalApplicationButton').css("display", "none");
            $('#UpdateExternalApplicationButton').css("display", "none");

            $('#CancelAddNewExternalApplicationButton').css("display", "inline");
            $('#SubmitNewExternalApplicationButton').css("display", "inline");

            $('#AddNewExternalApplicationButton').css("display", "none");
            CleanFormInput();
            $('#exMessageTemplate').val(_outputTemplateDefaultValue);
            $("#exName").focus();
        });

        $('#CancelAddNewExternalApplicationButton').click(function () {
            SwitchToViewMode();
            CleanFormInput();
            $('#panel_detail').css("display", "none");
            window.scrollTo(0, 0);
        });

        $('#SubmitNewExternalApplicationButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoExternalApplicationTransactionAjax("addexternalapplication", -1, result.postData);
                        SwitchToViewMode();
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteExternalApplicationButton').click(function () {
            if (_selectedExternalApplicationId < 0)
                toastr["error"]("[[[No ExternalApplication Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoExternalApplicationTransactionAjax("deleteexternalapplication", _selectedExternalApplicationId, null);
                        CleanFormInput();
                        window.scrollTo(0, 0);
                        SwitchToViewMode();
                        $('#panel_detail').css("display", "none");
                    }
                });
            }
        });

        $('#UpdateExternalApplicationButton').click(function () {
            if (_selectedExternalApplicationId < 0)
                toastr["error"]("[[[No Employee Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            console.log("isconfirmed")
                            DoExternalApplicationTransactionAjax("updateexternalapplication", _selectedExternalApplicationId, result.postData);
                            CleanFormInput();
                            SwitchToViewMode();
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
    });
</script>