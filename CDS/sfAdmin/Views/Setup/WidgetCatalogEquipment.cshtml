@{
    ViewBag.Title = "Setup / Widget Catalog - Equipment";
}

<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Setup]]] / [[[Widget Catalog - Equipment]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewWidgetCatalogButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Widget Catalog]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="widgetCatalogListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Visual Type]]]</th>
                        <th>[[[Name]]]</th>
                        <th>[[[Message Catalog]]]</th>
                    </tr>
                </thead>

                <tbody id="WidgetCatalogList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<!-- Start Detail Panel -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">Detail</h4>
                </div>
                <div style="float:right">
                    <button id="EditWidgetContextButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:128px;"> <i class="ti-ruler-pencil m-r-5"></i> <span>[[[Edit]]] [[[Content]]]</span> </button>
                    <button id="DeleteWidgetCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateWidgetCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewWidgetCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewWidgetCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>

            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="imgPhotoURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="widgetCatalog-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cWidgetClassName" class="col-sm-3 control-label">
                                            [[[Visual Type]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="cWidgetClassName" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="cName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group" id="messageCatalogDiv">
                                        <label for="cMessageCatalogID" class="col-sm-3 control-label">
                                            [[[Message Catalog]]] (*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="cMessageCatalogID" class="form-control" required></select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end Detail Panel -->
<!-- Start Widget Context Panel -->
<div class="row" id="panel_widgetContext" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="WidgetContextPanelTitle" class="header-title m-t-0 m-b-30">[[[Line Chart Define]]]</h4>
                </div>
                <div style="float:right">
                    <button id="UpdateWidgetContextButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                </div>
            </div>

            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <!-- Line Chart Start -->
                    <div id="WidgetLineChartDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="LineChartURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="LineChart-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cLineTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLinePixel" class="col-sm-4 control-label">
                                            [[[Line Pixel]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLinePixel" class="form-control" required>
                                                <option value="1">1 [[[Pixel]]]</option>
                                                <option value="2">2 [[[Pixel]]]</option>
                                                <option value="3">3 [[[Pixel]]]</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineXAxisSource" class="col-sm-4 control-label">
                                            X [[[Axis]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineXAxisSource" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineXAxisDisplay" class="col-sm-4 control-label">
                                            X [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineXAxisDisplay" type="text" class="form-control" placeholder="[[[Display]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis1Source" class="col-sm-4 control-label">
                                            Y 1 [[[Axis]]] [[[Source]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis1Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis1Scale" class="col-sm-4 control-label">
                                            Y 1 [[[Scale]]] [[[Location]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis1Scale" class="form-control" required>
                                                <option value="1">[[[Left]]]</option>
                                                <option value="2">[[[Right]]]</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis1Display" class="col-sm-4 control-label">
                                            Y 1 [[[Axis]]] [[[Title]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis1Display" type="text" class="form-control" placeholder="[[[Diaplay]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis1Color" class="col-sm-4 control-label">
                                            Y 1 [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis1Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cLineYAxis2Source" class="col-sm-4 control-label">
                                            Y 2 [[[Axis]]] [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis2Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis2Scale" class="col-sm-4 control-label">
                                            Y 2 [[[Scale]]] [[[Location]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis2Scale" class="form-control" required>
                                                <option value="1">[[[Left]]]</option>
                                                <option value="2">[[[Right]]]</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis2Display" class="col-sm-4 control-label">
                                            Y 2 [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis2Display" type="text" class="form-control" placeholder="[[[Display]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis2Color" class="col-sm-4 control-label">
                                            Y 2 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis2Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis3Source" class="col-sm-4 control-label">
                                            Y 3 [[[Axis]]] [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis3Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis3Scale" class="col-sm-4 control-label">
                                            Y 3 [[[Scale]]] [[[Location]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLineYAxis3Scale" class="form-control" required>
                                                <option value="1">[[[Left]]]</option>
                                                <option value="2">[[[Right]]]</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis3Display" class="col-sm-4 control-label">
                                            Y 3 [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis3Display" type="text" class="form-control" placeholder="[[[Display]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLineYAxis3Color" class="col-sm-4 control-label">
                                            Y 3 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cLineYAxis3Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Line Chart -->
                    <!-- Bar Chart Start -->
                    <div id="WidgetBarChartDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="BarChartURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="BarChart-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cBarTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarSpace" class="col-sm-4 control-label">
                                            [[[Bar Width]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cBarSpace" class="form-control" required>
                                                <option value="1">1 [[[Space]]]</option>
                                                <option value="2">2 [[[Space]]]</option>
                                                <option value="3">3 [[[Space]]]</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarXAxisSource" class="col-sm-4 control-label">
                                            X [[[Axis]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cBarXAxisSource" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarXAxisDisplay" class="col-sm-4 control-label">
                                            X [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarXAxisDisplay" type="text" class="form-control" placeholder="Display">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis1Source" class="col-sm-4 control-label">
                                            Y 1 [[[Axis]]] [[[Source]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cBarYAxis1Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis1Display" class="col-sm-4 control-label">
                                            Y 1 [[[Axis]]] [[[Title]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis1Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis1Color" class="col-sm-4 control-label">
                                            Y 1 [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis1Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cBarYAxis2Source" class="col-sm-4 control-label">
                                            Y 2 [[[Axis]]] [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cBarYAxis2Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis2Display" class="col-sm-4 control-label">
                                            Y 2 [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis2Display" type="text" class="form-control" placeholder="Display">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis2Color" class="col-sm-4 control-label">
                                            Y 2 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis2Color" type="text" class="form-control jscolor" placeholder="Color">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis3Source" class="col-sm-4 control-label">
                                            Y 3 [[[Axis]]] [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cBarYAxis3Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis3Display" class="col-sm-4 control-label">
                                            Y 3 [[[Axis]]] [[[Title]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis3Display" type="text" class="form-control" placeholder="Display">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cBarYAxis3Color" class="col-sm-4 control-label">
                                            Y 3 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBarYAxis3Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">

                        </div>
                    </div>  <!-- End of Bar Chart -->
                    <!-- Pie Chart Start -->
                    <div id="WidgetPieChartDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="PieChartURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="PieChart-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cPieTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue1Source" class="col-sm-4 control-label">
                                            [[[Value]]] 1 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPieValue1Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue1Display" class="col-sm-4 control-label">
                                            [[[Value]]] 1 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue1Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue1Color" class="col-sm-4 control-label">
                                            [[[Value]]] 1 [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue1Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue2Source" class="col-sm-4 control-label">
                                            [[[Value]]] 2 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPieValue2Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue2Display" class="col-sm-4 control-label">
                                            [[[Value]]] 2 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue2Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue2Color" class="col-sm-4 control-label">
                                            [[[Value]]] 2 [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue2Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cPieValue3Source" class="col-sm-4 control-label">
                                            [[[Value]]] 3 [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPieValue3Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue3Display" class="col-sm-4 control-label">
                                            [[[Value]]] 3 [[[Display]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue3Display" type="text" class="form-control" placeholder="[[[Display]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue3Color" class="col-sm-4 control-label">
                                            [[[Value]]] 3 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue3Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue4Source" class="col-sm-4 control-label">
                                            [[[Value]]] 4 [[[Source]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPieValue4Source" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue4Display" class="col-sm-4 control-label">
                                            [[[Value]]] 4 [[[Display]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue4Display" type="text" class="form-control" placeholder="[[[Display]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPieValue4Color" class="col-sm-4 control-label">
                                            [[[Value]]] 4 [[[Color]]]
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPieValue4Color" type="text" class="form-control jscolor" placeholder="[[[Color]]]">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Pie Chart -->
                    <!-- Percentage Card Start -->
                    <div id="WidgetPercentageCardtDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="PercentageCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="PercentageChart-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cPercentageTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPercentageTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPercentageTotalSourceFrom" class="col-sm-4 control-label">
                                            [[[Denominator]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPercentageTotalSourceFrom" class="form-control" required>
                                                <option value="inputValue">Input Value</option>
                                                <option value="messageField">Message Field</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group" id="divPercentageTotalSourceValue">
                                        <label for="cPercentageTotalSourceValue" class="col-sm-4 control-label">
                                            [[[Denominator]]] [[[Value]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPercentageTotalSourceInputValue" type="text" class="form-control" placeholder="Input Value" required>
                                            <select id="cPercentageTotalSourceMessageField" class="form-control" required></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group" id="totalSourceMessageField">
                                        <label for="cPercentageCurrentNumber" class="col-sm-4 control-label">
                                            [[[Numerator]]] [[[Source]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cPercentageCurrentNumber" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPercentageFGColor" class="col-sm-4 control-label">
                                            [[[Foreground]]] [[[Color]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPercentageFGColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPercentageBGColor" class="col-sm-4 control-label">
                                            [[[Background]]] [[[Color]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cPercentageBGColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Percentage Chart -->
                    <!-- Text Card Start -->
                    <div id="WidgetTextCardDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="TextCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="TextCard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cTextTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextDataSource" class="col-sm-4 control-label">
                                            [[[Data]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8" id="totalSourceMessageField">
                                            <select id="cTextDataSource" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextFGColor" class="col-sm-4 control-label">
                                            [[[Foreground]]] [[[Color]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextFGColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Text Card -->
                    <!-- Alarm Card Start -->
                    <div id="WidgetAlarmCardDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="AlarmCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="AlarmCard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cAlarmTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cAlarmTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cShowAlarmDuration" class="col-sm-4 control-label">
                                            [[[Alarm Duration (sec)]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cShowAlarmDuration" type="text" class="form-control" placeholder="[[[Show Alarm Duration (second)]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cAlarmTextColor" class="col-sm-4 control-label">
                                            [[[Text]]] [[[Color]]] [[[on Alert]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cAlarmTextColor" type="text" class="form-control jscolor" placeholder="[[[Text]]] [[[Color]]] [[[on Alert]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cAlarmBGColor" class="col-sm-4 control-label">
                                            [[[Background]]] [[[Color]]] [[[on Alert]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cAlarmBGColor" type="text" class="form-control jscolor" placeholder="[[[Background]]] [[[Color]]] [[[on Alert]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cAlarmNormalBGColor" class="col-sm-4 control-label">
                                            [[[Background]]] [[[Color]]] [[[on Normal]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cAlarmNormalBGColor" type="text" class="form-control jscolor" placeholder="[[[Background]]] [[[Color]]] [[[on Normal]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Alarm Card -->
                    <!-- Basic Card Start -->
                    <div id="WidgetBasicCardDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="BasicCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="BasicCard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cBasicTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cBasicTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Basic Card -->
                    <!-- Google Map Card Start -->
                    <div id="WidgetGoogleMapCardDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="GoogleMapCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="GoogleMapCard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cGoogleMapTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cGoogleMapTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cInitialGoogleMapZoom" class="col-sm-4 control-label">
                                            [[[Initial Zoom Level]]](*)
                                        </label>
                                        <div class="col-sm-8" id="totalSourceMessageField">
                                            <select id="cInitialGoogleMapZoom" class="form-control" required>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                                <option value="7">7</option>
                                                <option value="8">8</option>
                                                <option value="9">9</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                                <option value="13">13</option>
                                                <option value="14">14</option>
                                                <option value="15">15</option>
                                                <option value="16">16</option>
                                                <option value="17">17</option>
                                                <option value="18">18</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Google Map Card -->
                    <!-- Google Map Location Trace Start -->
                    <div id="WidgetGoogleMapLocationTraceDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="GoogleMapLocationTraceURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="GoogleMapLocationTrace-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cGoogleMapLocationTraceTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cGoogleMapLocationTraceTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cGoogleMapLocationTraceLatitude" class="col-sm-4 control-label">
                                            [[[Latitude]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cGoogleMapLocationTraceLatitude" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cGoogleMapLocationTraceLongitude" class="col-sm-4 control-label">
                                            [[[Longitude]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cGoogleMapLocationTraceLongitude" class="form-control" required></select>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cInitialGoogleMapLocationTraceZoom" class="col-sm-4 control-label">
                                            [[[Initial Zoom Level]]](*)
                                        </label>
                                        <div class="col-sm-8" id="totalSourceMessageField">
                                            <select id="cInitialGoogleMapLocationTraceZoom" class="form-control" required>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                                <option value="7">7</option>
                                                <option value="8">8</option>
                                                <option value="9">9</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                                <option value="13">13</option>
                                                <option value="14">14</option>
                                                <option value="15">15</option>
                                                <option value="16">16</option>
                                                <option value="17">17</option>
                                                <option value="18">18</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Google Map Location Trace -->
                    <!-- Text List Card Start -->
                    <div id="WidgetTextListCardtDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="TextListCardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="TextListCard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cTextListTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText1Source" class="col-sm-4 control-label">
                                            [[[Text]]] 1 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cTextListText1Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText1Display" class="col-sm-4 control-label">
                                            [[[Text]]] 1 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText1Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText1BallColor" class="col-sm-4 control-label">
                                            [[[Text]]] 1 [[[Ball]]] [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText1BallColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText2Source" class="col-sm-4 control-label">
                                            [[[Text]]] 2 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cTextListText2Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText2Display" class="col-sm-4 control-label">
                                            [[[Text]]] 2 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText2Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText2BallColor" class="col-sm-4 control-label">
                                            [[[Text]]] 2 [[[Ball]]] [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText2BallColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="cTextListText3Source" class="col-sm-4 control-label">
                                            [[[Text]]] 3 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cTextListText3Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText3Display" class="col-sm-4 control-label">
                                            [[[Text]]] 3 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText3Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText3BallColor" class="col-sm-4 control-label">
                                            [[[Text]]] 3 [[[Ball]]] [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText3BallColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText4Source" class="col-sm-4 control-label">
                                            [[[Text]]] 4 [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cTextListText4Source" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText4Display" class="col-sm-4 control-label">
                                            [[[Text]]] 4 [[[Display]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText4Display" type="text" class="form-control" placeholder="[[[Display]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cTextListText4BallColor" class="col-sm-4 control-label">
                                            [[[Text]]] 4 [[[Ball]]] [[[Color]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cTextListText4BallColor" type="text" class="form-control jscolor" placeholder="[[[Color]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Text List Card -->
                    <!-- Alarm List Start -->
                    <div id="WidgetAlarmListDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="AlarmListURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="AlarmList-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cAlarmListTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cAlarmListTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cAlarmListDataRange" class="col-sm-4 control-label">
                                            [[[Alarm Data Range]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cAlarmListDataRange" class="form-control" required>
                                                <option value="6">6 hours</option>
                                                <option value="24">24 hours</option>
                                                <option value="168">7 days</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Alarm List -->
                    <!-- Simple OEE Card Start 312-->
                    <div id="WidgetSimpleOEECardtDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="SimpleOEECardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="SimpleOEECard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-12">
                                    <div class="form-group">
                                        <label for="cSimpleOEETitle" class="col-sm-6 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-6">
                                            <input id="cSimpleOEETitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cFormula" class="col-sm-12 control-label">
                                            OEE = (Good Units × Ideal Cycle Time) / Planned Production Time
                                        </label>
                                    </div>
                                    <div class="form-group">
                                        <label for="cSimpleOEE_GoodUnits" class="col-sm-6 control-label">
                                            Good Count (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cSimpleOEE_GoodUnits" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cSimpleOEE_IdealCycleTime" class="col-sm-6 control-label">
                                            Ideal Cycle Time (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cSimpleOEE_IdealCycleTime" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cSimpleOEE_PlannedProductionTime" class="col-sm-6 control-label">
                                            Planned Production Time(*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cSimpleOEE_PlannedProductionTime" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Threadshold" class="col-sm-4 control-label">
                                            [[[Threadshold]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <table width="100%">
                                                <tr>
                                                    <td width="20%"><div style="background-color:red;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cSimpleOEEThreadsLow" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:orange;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cSimpleOEEThreadsHigh" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:forestgreen;padding:20px;" /></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Simple OEE Card -->
                    <!-- Preferred OEE Card Start 313 -->
                    <div id="WidgetPreferredOEECardtDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="PreferredOEECardURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="PreferredOEECard-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-12">
                                    <div class="form-group">
                                        <label for="cPreferredOEETitle" class="col-sm-6 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-6">
                                            <input id="cPreferredOEETitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_RunTime" class="col-sm-6 control-label">
                                            Run Time (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_RunTime" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_PlannedProductionTime" class="col-sm-6 control-label">
                                            Planned Production Time (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_PlannedProductionTime" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_ProducedUnits" class="col-sm-6 control-label">
                                            Produced Units (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_ProducedUnits" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_ExpectedUnits" class="col-sm-6 control-label">
                                            Expected Units (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_ExpectedUnits" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_GoodUnits" class="col-sm-6 control-label">
                                            Good Units (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_GoodUnits" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cPreferredOEE_RejectedUnits" class="col-sm-6 control-label">
                                            Rejected Units (*)
                                        </label>
                                        <div class="col-sm-6">
                                            <select id="cPreferredOEE_RejectedUnits" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Threadshold" class="col-sm-4 control-label">
                                            OEE [[[Threadshold]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <table width="100%">
                                                <tr>
                                                    <td width="20%"><div style="background-color:red;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cPreferredOEEThreadsLow" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:orange;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cPreferredOEEThreadsHigh" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:forestgreen;padding:20px;" /></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Threadshold" class="col-sm-4 control-label">
                                            Availability [[[Threadshold]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <table width="100%">
                                                <tr>
                                                    <td width="20%"><div style="background-color:red;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cAvailabilityThreadsLow" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:orange;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cAvailabilityThreadsHigh" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:forestgreen;padding:20px;" /></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Threadshold" class="col-sm-4 control-label">
                                            Performance [[[Threadshold]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <table width="100%">
                                                <tr>
                                                    <td width="20%"><div style="background-color:red;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cPerformanceThreadsLow" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:orange;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cPerformanceThreadsHigh" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:forestgreen;padding:20px;" /></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="Threadshold" class="col-sm-4 control-label">
                                            Quality [[[Threadshold]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <table width="100%">
                                                <tr>
                                                    <td width="20%"><div style="background-color:red;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cQualityThreadsLow" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:orange;padding:20px;" /></td>
                                                    <td width="20%" align="center" valign="middle"><input id="cQualityThreadsHigh" class="form-control" style="width:60%;" type="text" required /></td>
                                                    <td width="20%"><div style="background-color:forestgreen;padding:20px;" /></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- Preferred OEE Card Start 313 -->
                    <!-- HTML Content Card 314 -->
                    <div id="WidgetHTMLContentDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="HTMLContentURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="HTMLContent-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cHTMLContentTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cHTMLContentTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="cHTMLContentSourceFrom" class="col-sm-4 control-label">
                                            [[[HTML Content]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cHTMLContentSourceFrom" class="form-control" required>
                                                <option value="inputValue">Input Value</option>
                                                <option value="messageField">Message Field</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group" id="divHTMLContentSourceValue">
                                        <label for="cHTMLContentSourceValue" class="col-sm-4 control-label">
                                            [[[HTML]]] [[[Content]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <textarea id="cHTMLContentSourceInputValue" class="form-control" rows="5"></textarea>
                                            <select id="cHTMLContentSourceMessageField" class="form-control" required></select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of HTML Static Content Card 314 -->
                    <!-- Google Map Equipment Circle 315 -->
                    <div id="WidgetGoogleMapCircleDefine" class="row" style="margin-top: 10px;">
                        <div class="col-sm-4">
                            <img id="GoogleMapCircleURL" src="/assets/images/widget/Default.JPG" class="img-responsive" alt="Photo" style="max-width: 320px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-8">
                            <form id="GoogleMapCircle-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="cGoogleMapCircleTitle" class="col-sm-4 control-label">
                                            [[[Title]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <input id="cGoogleMapCircleTitle" type="text" class="form-control" placeholder="[[[Title]]]" required>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="cLocationSourceFrom" class="col-sm-4 control-label">
                                            [[[Location]]] [[[Source]]](*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cLocationSourceFrom" class="form-control" required>
                                                <option value="equipmentMeta">Equipment Meta Data</option>
                                                <option value="messageField">Message Field</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group" id="divGoogleMapCircleLat" style="display:none">
                                        <label for="cGoogleMapCircleLatitude" class="col-sm-4 control-label">
                                            [[[Latitude]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cGoogleMapCircleLatitude" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group" id="divGoogleMapCircleLong" style="display:none">
                                        <label for="cGoogleMapCircleLongitude" class="col-sm-4 control-label">
                                            [[[Longitude]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cGoogleMapCircleLongitude" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cGoogleMapRadius" class="col-sm-4 control-label">
                                            [[[Radius]]] (*)
                                        </label>
                                        <div class="col-sm-8">
                                            <select id="cGoogleMapRadius" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="c1by1GoogleMapCircleZoom" class="col-sm-4 control-label">
                                            [[[1 by 1 Zoom Level]]](*)
                                        </label>
                                        <div class="col-sm-8" id="totalSourceMessageField">
                                            <select id="c1by1GoogleMapCircleZoom" class="form-control" required>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                                <option value="7">7</option>
                                                <option value="8">8</option>
                                                <option value="9">9</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                                <option value="13">13</option>
                                                <option value="14">14</option>
                                                <option value="15">15</option>
                                                <option value="16">16</option>
                                                <option value="17">17</option>
                                                <option value="18">18</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cInitialGoogleMapCircleZoom" class="col-sm-4 control-label">
                                            [[[Initial Zoom Level]]](*)
                                        </label>
                                        <div class="col-sm-8" id="totalSourceMessageField">
                                            <select id="cInitialGoogleMapCircleZoom" class="form-control" required>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                                <option value="7">7</option>
                                                <option value="8">8</option>
                                                <option value="9">9</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                                <option value="13">13</option>
                                                <option value="14">14</option>
                                                <option value="15">15</option>
                                                <option value="16">16</option>
                                                <option value="17">17</option>
                                                <option value="18">18</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>  <!-- End of Google Map Equipment Circle 315 -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end Detail Panel -->

<script type="text/javascript">
    var _widgetCatalogJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.WidgetCatalogList'));
    var _widgetClassJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.WidgetClassList'));
    var _messageCatalogJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.MessageCatalogList'));
    var _selectedWidgetCatalogId = -1;
    var _selectedVisualType = "";

    function LoadWidgetCatalogListIntoTable() {

        var widgetCatalogDataSet = $('#datatable-responsive').DataTable();
        widgetCatalogDataSet.clear();

        for (var i in _widgetCatalogJSONObjs) {
            widgetCatalogDataSet.row.add([
                parseInt(i) + 1,
                GetWidgetClassNameByKey(_widgetCatalogJSONObjs[i].WidgetClassKey),
                _widgetCatalogJSONObjs[i].Name,
                _widgetCatalogJSONObjs[i].MessageCatalogName,
            ]).draw(false);
        }
        widgetCatalogDataSet.columns.adjust().draw();
    }

    function GetWidgetClassNameByKey(key)
    {
        for (var i in _widgetClassJSONObjs) {
            if (_widgetClassJSONObjs[i].Key == key)
                return _widgetClassJSONObjs[i].Name;
        }
        return '';
    }

    function LoadWidgetClassList() {
        var options = "";
        for (var i in _widgetClassJSONObjs) {
            if (!_widgetClassJSONObjs[i].DeletedFlag) {
                options += "<option value='" + _widgetClassJSONObjs[i].Key + "'>" + _widgetClassJSONObjs[i].Name + "</option>";
                switch (_widgetClassJSONObjs[i].Key) {
                    case 300:        //Alarm Card
                        $('#AlarmCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 301:       //'Bar Chart':
                        $('#BarChartURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 302:       //'Basic Card':
                        $('#BasicCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 303:       //'Google Map Card':
                        $('#GoogleMapCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 305:       //'Line Chart':
                        $('#LineChartURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 306:       //'Percentage Card':
                        $('#PercentageCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 307:       //'Pie Chart':
                        $('#PieChartURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 308:       //'Text Card':
                        $('#TextCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 309:       //'Text List Card':
                        $('#TextListCardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 310:       // Alarm List
                        $('#AlarmListURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 311:       // Google Map Location Trace
                        $('#GoogleMapLocationTraceURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 312:       // Simple OEE Card
                        $('#SimpleOEECardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 313:       // Preferred OEE Card
                        $('#PreferredOEECardURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 314:       // HTML Content
                        $('#HTMLContentURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                    case 315:       // Google Map Circle Content
                        $('#GoogleMapCircleURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                        break;
                }
            }
        }
        document.getElementById("cWidgetClassName").innerHTML = options;
    }

    function LoadMessageCatalogList() {
        var options = "";
        for (var i in _messageCatalogJSONObjs) {
            options += "<option value='" + _messageCatalogJSONObjs[i].Id + "'>" + _messageCatalogJSONObjs[i].Name + "</option>"
        }
        document.getElementById("cMessageCatalogID").innerHTML = options;
    }

    function RefreshMessageElementOnWidgetContext(messageCatalogId) {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getmessageflatelement&Id=" + messageCatalogId + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                var messageElementObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                var options = "";
                for (var i in messageElementObjs) {
                    if (messageElementObjs[i].ParentId == null)
                        options += "<option value='" + messageElementObjs[i].Id + "'>" + messageElementObjs[i].Name + " (" + messageElementObjs[i].DataType + ")</option>"
                    else
                        options += "<option value='" + messageElementObjs[i].ParentId + "_" + messageElementObjs[i].Id + "'>" + messageElementObjs[i].Name + " (" + messageElementObjs[i].DataType + ")</option>"
                }
                document.getElementById("cLineXAxisSource").innerHTML = options;
                document.getElementById("cLineYAxis1Source").innerHTML = options;
                document.getElementById("cLineYAxis2Source").innerHTML = options;
                document.getElementById("cLineYAxis3Source").innerHTML = options;
                document.getElementById("cBarXAxisSource").innerHTML = options;
                document.getElementById("cBarYAxis1Source").innerHTML = options;
                document.getElementById("cBarYAxis2Source").innerHTML = options;
                document.getElementById("cBarYAxis3Source").innerHTML = options;
                document.getElementById("cPieValue1Source").innerHTML = options;
                document.getElementById("cPieValue2Source").innerHTML = options;
                document.getElementById("cPieValue3Source").innerHTML = options;
                document.getElementById("cPieValue4Source").innerHTML = options;
                document.getElementById("cPercentageTotalSourceMessageField").innerHTML = options;
                document.getElementById("cPercentageCurrentNumber").innerHTML = options;
                document.getElementById("cTextDataSource").innerHTML = options;
                document.getElementById("cGoogleMapLocationTraceLatitude").innerHTML = options;
                document.getElementById("cGoogleMapLocationTraceLongitude").innerHTML = options;
                document.getElementById("cTextListText1Source").innerHTML = options;
                document.getElementById("cTextListText2Source").innerHTML = options;
                document.getElementById("cTextListText3Source").innerHTML = options;
                document.getElementById("cTextListText4Source").innerHTML = options;
                document.getElementById("cSimpleOEE_GoodUnits").innerHTML = options;
                document.getElementById("cSimpleOEE_IdealCycleTime").innerHTML = options;
                document.getElementById("cSimpleOEE_PlannedProductionTime").innerHTML = options;
                document.getElementById("cPreferredOEE_RunTime").innerHTML = options;
                document.getElementById("cPreferredOEE_PlannedProductionTime").innerHTML = options;
                document.getElementById("cPreferredOEE_ProducedUnits").innerHTML = options;
                document.getElementById("cPreferredOEE_ExpectedUnits").innerHTML = options;
                document.getElementById("cPreferredOEE_GoodUnits").innerHTML = options;
                document.getElementById("cPreferredOEE_RejectedUnits").innerHTML = options;
                document.getElementById("cHTMLContentSourceMessageField").innerHTML = options;
                document.getElementById("cGoogleMapCircleLatitude").innerHTML = options;
                document.getElementById("cGoogleMapCircleLongitude").innerHTML = options;
                document.getElementById("cGoogleMapRadius").innerHTML = options;

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function CleanFormInput() {
        $("#cWidgetClassName").val('');
        $('#cName').val('');
        $('#cMessageCatalogID').val('');
        $('#imgPhotoURL').prop("src", "/assets/images/widget/Default.JPG");
    }

    function RefreshWidgetCatalogTable() {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getEquipmentWidgetCatalog" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _widgetCatalogJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadWidgetCatalogListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function OnSelectWidgetCatalogItem(widgetCatalogId) {
        $('#panel_widgetContext').css("display", "none");
        $('#panel_detail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        _selectedWidgetCatalogId = widgetCatalogId;
        //CleanFormInput();
        for (var i in _widgetCatalogJSONObjs) {
            if (_widgetCatalogJSONObjs[i].Id == _selectedWidgetCatalogId) {
                $('#cWidgetClassName').val(_widgetCatalogJSONObjs[i].WidgetClassKey);
                $('#cMessageCatalogID').val(_widgetCatalogJSONObjs[i].MessageCatalogId);
                $('#cName').val(_widgetCatalogJSONObjs[i].Name);
                _selectedVisualType = _widgetCatalogJSONObjs[i].WidgetClassName;

                if (_widgetCatalogJSONObjs[i].WidgetClassKey != '310')
                    RefreshMessageElementOnWidgetContext(_widgetCatalogJSONObjs[i].MessageCatalogId);

                ChangeImgPhotoURL(_widgetCatalogJSONObjs[i].WidgetClassKey);
                break;
            }
        }
    }

    function ChangeImgPhotoURL(WidgetClassKey) {
        if (WidgetClassKey == '310')
            $('#messageCatalogDiv').css('display', 'none');
        else
            $('#messageCatalogDiv').css('display', 'block');

        for (var i in _widgetClassJSONObjs) {
            if (_widgetClassJSONObjs[i].Key == WidgetClassKey) {
                $('#imgPhotoURL').prop('src', _widgetClassJSONObjs[i].PhotoURL);
                break;
            }
        }
    }

    function DoWidgetCatalogTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Setup/ReqAction?action=" + actionName;
        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshWidgetCatalogTable();
                _selectedWidgetCatalogId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    TableManageButtons.init();

    LoadWidgetCatalogListIntoTable();
    LoadWidgetClassList();
    LoadMessageCatalogList();

    $(document).ready(function () {
        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #WidgetCatalogList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectWidgetCatalogItem(_widgetCatalogJSONObjs[table.row(this).index()].Id);
        });

        jQuery('#datepicker-autoclose').datepicker({
            autoclose: true,
            todayHighlight: true
        });

        function dataContextValidation(contextString) {
            if ($('#cWidgetClassName').val() != 0) {
                switch (eval($('#cWidgetClassName').val())) {
                    case 300:       //'Alarm Card':
                        if ($("#cAlarmTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cAlarmTitle").val() + '",';
                        } else {
                            $("#cAlarmTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cShowAlarmDuration").val().length != 0) {
                            if (isNaN($("#cShowAlarmDuration").val()))
                            {
                                $("#cShowAlarmDuration").focus();
                                swal("[[[Invalid]]] !", "[[[Show Alarm Duration]]] [[[must be number]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }
                            else
                            {
                                contextString = contextString + '"ShowAlarmDuration":"' + $("#cShowAlarmDuration").val() + '",';
                            }
                        }
                        else
                        {
                            contextString = contextString + '"ShowAlarmDuration":"30",';        // Default 30 seconds
                        }


                        if ($("#cAlarmTextColor").val().length != 0) {
                            contextString = contextString + '"TextColorCode":"' + $("#cAlarmTextColor").val() + '",';
                        } else {
                            $("#cAlarmTextColor").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cAlarmBGColor").val().length != 0) {
                            contextString = contextString + '"BGColorCode":"' + $("#cAlarmBGColor").val() + '",';
                        } else {
                            $("#cAlarmBGColor").focus();
                            swal("[[[Invalid]]] !", "[[[Background]]] [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cAlarmNormalBGColor").val().length != 0) {
                            contextString = contextString + '"NormalBGColorCode":"' + $("#cAlarmNormalBGColor").val() + '",';
                        } else {
                            contextString = contextString + '"NormalBGColorCode":"' + 'FFFFFF' + '",';
                        }
                        break;
                    case 301:       //'Bar Chart':
                        if ($("#cBarTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cBarTitle").val() + '",';
                        } else {
                            $("#cBarTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cBarSpace").val().length != 0) {
                            contextString = contextString + '"BarSpace":' + $("#cBarSpace").val() + ',';
                        } else {
                            $("#cBarSpace").focus();
                            swal("[[[Invalid]]] !", "[[[Bar Space]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cBarXAxisSource").val().length != 0) {
                            contextString = contextString + '"Axis_X":"' + $("#cBarXAxisSource").val() + '",';
                            var optionText = $('#cBarXAxisSource option:selected').text();
                            var dtypeS = optionText.indexOf("(") + 1;
                            var dtypeE = optionText.indexOf(")");
                            contextString = contextString + '"Axis_X_DataType":"' + optionText.substring(dtypeS, dtypeE) + '",';

                        } else {
                            $("#cBarXAxisSource").focus();
                            swal("[[[Invalid]]] !", "X [[[Axis]]] [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cBarXAxisDisplay").val().length != 0)
                            contextString = contextString + '"Axis_X_Display":"' + $("#cBarXAxisDisplay").val() + '",';
                        else
                            contextString = contextString + '"Axis_X_Display":"",';

                        var YAxisObjs = "", YAxis1Objs = "", YAxis2Objs = "", YAxis3Objs = "";
                        if ($("#cBarYAxis1Source").val().length != 0) {
                            YAxis1Objs = YAxis1Objs + '"Axis_Y":"' + $("#cBarYAxis1Source").val() + '",';
                        } else {
                            $("#cBarYAxis1Source").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cBarYAxis1Display").val().length != 0) {
                            YAxis1Objs = YAxis1Objs + '"Display":"' + $("#cBarYAxis1Display").val() + '",';
                        } else {
                            $("#cBarYAxis1Display").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cBarYAxis1Color").val().length != 0) {
                            YAxis1Objs = YAxis1Objs + '"ColorCode":"' + $("#cBarYAxis1Color").val() + '"';
                        } else {
                            $("#cBarYAxis1Color").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        YAxisObjs = "{" + YAxis1Objs + "}";

                        if (($("#cBarYAxis2Source").val().length != 0) && ($("#cBarYAxis2Display").val().length != 0) && ($("#cBarYAxis2Color").val().length != 0)) {
                            YAxis2Objs = YAxis2Objs + '"Axis_Y":"' + $("#cBarYAxis2Source").val() + '",';
                            YAxis2Objs = YAxis2Objs + '"Display":"' + $("#cBarYAxis2Display").val() + '",';
                            YAxis2Objs = YAxis2Objs + '"ColorCode":"' + $("#cBarYAxis2Color").val() + '"';
                            YAxisObjs = YAxisObjs + ",{" + YAxis2Objs + "}";
                        }

                        if (($("#cBarYAxis3Source").val().length != 0) && ($("#cBarYAxis3Display").val().length != 0) && ($("#cBarYAxis3Color").val().length != 0)) {
                            YAxis3Objs = YAxis3Objs + '"Axis_Y":"' + $("#cBarYAxis3Source").val() + '",';
                            YAxis3Objs = YAxis3Objs + '"Display":"' + $("#cBarYAxis3Display").val() + '",';
                            YAxis3Objs = YAxis3Objs + '"ColorCode":"' + $("#cBarYAxis3Color").val() + '"';
                            YAxisObjs = YAxisObjs + ",{" + YAxis3Objs + "}";
                        }
                        contextString = contextString + '"Axis_Y_Values":[' + YAxisObjs + "]";
                        break;
                    case 302:       //"Basic Card":
                        if ($("#cBasicTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cBasicTitle").val() + '",';
                        } else {
                            $("#cBasicTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 303:       //"Google Map Card":
                        if ($("#cGoogleMapTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cGoogleMapTitle").val() + '",';
                        } else {
                            $("#cGoogleMapTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cInitialGoogleMapZoom").val() != null) {
                            contextString = contextString + '"MapZoom":"' + $("#cInitialGoogleMapZoom").val() + '",';
                        } else {
                            contextString = contextString + '"MapZoom":"12",';
                        }
                        break;
                    case 305:       //'Line Chart':
                        if ($("#cLineTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cLineTitle").val() + '",';
                        } else {
                            $("#cLineTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLinePixel").val() != null) {
                            contextString = contextString + '"LinePixel":' + $("#cLinePixel").val() + ',';
                        } else {
                            $("#cLinePixel").focus();
                            swal("[[[Invalid]]] !", "[[[Line Pixel]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLineXAxisSource").val() != null) {
                            contextString = contextString + '"Axis_X":"' + $("#cLineXAxisSource").val() + '",';
                            var optionText = $('#cLineXAxisSource option:selected').text();
                            var dtypeS = optionText.indexOf("(") + 1;
                            var dtypeE = optionText.indexOf(")");
                            contextString = contextString + '"Axis_X_DataType":"' + optionText.substring(dtypeS, dtypeE) + '",';

                        } else {
                            $("#cLineXAxisSource").focus();
                            swal("[[[Invalid]]] !", "X [[[Axis]]] [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLineXAxisDisplay").val().length != 0)
                            contextString = contextString + '"Axis_X_Display":"' + $("#cLineXAxisDisplay").val() + '",';
                        else
                            contextString = contextString + '"Axis_X_Display":"",';

                        var YAxisObjs = "", YAxis1Objs = "", YAxis2Objs = "", YAxis3Objs = "";

                        if ($("#cLineYAxis1Source").val() != null) {
                            YAxis1Objs = YAxis1Objs + '"Axis_Y":"' + $("#cLineYAxis1Source").val() + '",';
                        } else {
                            $("#cLineYAxis1Source").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cLineYAxis1Scale").val() != null) {
                            YAxis1Objs = YAxis1Objs + '"Scale_Y":"' + $("#cLineYAxis1Scale").val() + '",';
                        } else {
                            $("#cLineYAxis1Scale").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Scale]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cLineYAxis1Display").val().length != 0) {
                            YAxis1Objs = YAxis1Objs + '"Display":"' + $("#cLineYAxis1Display").val() + '",';
                        } else {
                            $("#cLineYAxis1Display").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLineYAxis1Color").val().length != 0) {
                            YAxis1Objs = YAxis1Objs + '"ColorCode":"' + $("#cLineYAxis1Color").val() + '"';
                        } else {
                            $("#cLineYAxis1Color").focus();
                            swal("[[[Invalid]]] !", "Y [[[Axis]]] 1 [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        YAxisObjs = "{" + YAxis1Objs + "}";

                        if (($("#cLineYAxis2Source").val() != null) && ($("#cLineYAxis2Scale").val() != null) && ($("#cLineYAxis2Display").val().length != 0) && ($("#cLineYAxis2Color").val().length != 0)) {
                            YAxis2Objs = YAxis2Objs + '"Axis_Y":"' + $("#cLineYAxis2Source").val() + '",';
                            YAxis2Objs = YAxis2Objs + '"Scale_Y":"' + $("#cLineYAxis2Scale").val() + '",';
                            YAxis2Objs = YAxis2Objs + '"Display":"' + $("#cLineYAxis2Display").val() + '",';
                            YAxis2Objs = YAxis2Objs + '"ColorCode":"' + $("#cLineYAxis2Color").val() + '"';
                            YAxisObjs = YAxisObjs + ",{" + YAxis2Objs + "}";
                        }

                        if (($("#cLineYAxis3Source").val() != null) && ($("#cLineYAxis3Scale").val() != null) && ($("#cLineYAxis3Display").val().length != 0) && ($("#cLineYAxis3Color").val().length != 0)) {
                            YAxis3Objs = YAxis3Objs + '"Axis_Y":"' + $("#cLineYAxis3Source").val() + '",';
                            YAxis3Objs = YAxis3Objs + '"Scale_Y":"' + $("#cLineYAxis3Scale").val() + '",';
                            YAxis3Objs = YAxis3Objs + '"Display":"' + $("#cLineYAxis3Display").val() + '",';
                            YAxis3Objs = YAxis3Objs + '"ColorCode":"' + $("#cLineYAxis3Color").val() + '"';
                            YAxisObjs = YAxisObjs + ",{" + YAxis3Objs + "}";
                        }
                        contextString = contextString + '"Axis_Y_Values":[' + YAxisObjs + "]";

                        break;
                    case 306:       //'Percentage Card':
                        if ($("#cPercentageTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cPercentageTitle").val() + '",';
                        } else {
                            $("#cPercentageTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPercentageTotalSourceFrom").val() != null) {
                            contextString = contextString + '"TotalNumberFrom":"' + $("#cPercentageTotalSourceFrom").val() + '",';
                        } else {
                            $("#cPercentageTotalSourceFrom").focus();
                            swal("[[[Invalid]]] !", "[[[Total Source From]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPercentageTotalSourceFrom").val() == "inputValue") {
                            if ($("#cPercentageTotalSourceInputValue").val().length != 0) {
                                contextString = contextString + '"TotalNumber":"' + $("#cPercentageTotalSourceInputValue").val() + '",';
                            } else {
                                $("#cPercentageTotalSourceInputValue").focus();
                                swal("[[[Invalid]]] !", "[[[Total Number]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }
                        }
                        else {
                            if ($("#cPercentageTotalSourceMessageField").val() != null) {
                                contextString = contextString + '"TotalNumber":"' + $("#cPercentageTotalSourceMessageField").val() + '",';
                            } else {
                                $("#cPercentageTotalSourceMessageField").focus();
                                swal("[[[Invalid]]] !", "[[[Total Number]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }
                        }
                        if ($("#cPercentageCurrentNumber").val() != null) {
                            contextString = contextString + '"Field":"' + $("#cPercentageCurrentNumber").val() + '",';
                        } else {
                            $("#cPercentageCurrentNumber").focus();
                            swal("[[[Invalid]]] !", "[[[Current Number]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPercentageFGColor").val().length != 0) {
                            contextString = contextString + '"FGColorCode":"' + $("#cPercentageFGColor").val() + '",';
                        } else {
                            $("#cPercentageFGColor").focus();
                            swal("[[[Invalid]]] !", "[[[Foreground]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPercentageBGColor").val().length != 0) {
                            contextString = contextString + '"BGColorCode":"' + $("#cPercentageBGColor").val() + '"';
                        } else {
                            $("#cPercentageBGColor").focus();
                            swal("[[[Invalid]]] !", "[[[Background]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 307:       //'Pie Chart':
                        if ($("#cPieTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cPieTitle").val() + '",';
                        } else {
                            $("#cPieTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        var ValueObjs = "", Value1Objs = "", Value2Objs = "", Value3Objs = "", Value4Objs = "";
                        if ($("#cPieValue1Source").val() != null) {
                            Value1Objs = Value1Objs + '"Field":"' + $("#cPieValue1Source").val() + '",';
                        } else {
                            $("#cPieValue1Source").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 1 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPieValue1Display").val().length != 0) {
                            Value1Objs = Value1Objs + '"Display":"' + $("#cPieValue1Display").val() + '",';
                        } else {
                            $("#cPieValue1Display").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 1 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPieValue1Color").val().length != 0) {
                            Value1Objs = Value1Objs + '"ColorCode":"' + $("#cPieValue1Color").val() + '"';
                        } else {
                            $("#cPieValue1Color").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 1 [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        ValueObjs = "{" + Value1Objs + "}";

                        if ($("#cPieValue2Source").val() != null) {
                            Value2Objs = Value2Objs + '"Field":"' + $("#cPieValue2Source").val() + '",';
                        } else {
                            $("#cPieValue2Source").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 2 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPieValue2Display").val().length != 0) {
                            Value2Objs = Value2Objs + '"Display":"' + $("#cPieValue2Display").val() + '",';
                        } else {
                            $("#cPieValue2Display").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 2 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPieValue2Color").val().length != 0) {
                            Value2Objs = Value2Objs + '"ColorCode":"' + $("#cPieValue2Color").val() + '"';
                        } else {
                            $("#cPieValue2Color").focus();
                            swal("[[[Invalid]]] !", "[[[Value]]] 2 [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        ValueObjs = ValueObjs + ",{" + Value2Objs + "}";

                        if ($("#cPieValue3Source").val() != null && $("#cPieValue3Display").val().length != 0 && $("#cPieValue3Color").val().length != 0) {
                            Value3Objs = Value3Objs + '"Field":"' + $("#cPieValue3Source").val() + '",';
                            Value3Objs = Value3Objs + '"Display":"' + $("#cPieValue3Display").val() + '",';
                            Value3Objs = Value3Objs + '"ColorCode":"' + $("#cPieValue3Color").val() + '"';
                            ValueObjs = ValueObjs + ",{" + Value3Objs + "}";
                        }

                        if ($("#cPieValue4Source").val() != null && $("#cPieValue4Display").val().length != 0 && $("#cPieValue4Color").val().length != 0) {
                            Value4Objs = Value4Objs + '"Field":"' + $("#cPieValue4Source").val() + '",';
                            Value4Objs = Value4Objs + '"Display":"' + $("#cPieValue4Display").val() + '",';
                            Value4Objs = Value4Objs + '"ColorCode":"' + $("#cPieValue4Color").val() + '"';
                            ValueObjs = ValueObjs + ",{" + Value4Objs + "}";
                        }
                        contextString = contextString + '"Values":[' + ValueObjs + "]";
                        break;
                    case 308:       //'Text Card':
                        if ($("#cTextTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cTextTitle").val() + '",';
                        } else {
                            $("#cTextTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextDataSource").val() != null) {
                            contextString = contextString + '"Field":"' + $("#cTextDataSource").val() + '",';
                        } else {
                            $("#cTextDataSource").focus();
                            swal("[[[Invalid]]] !", "[[[Data Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextFGColor").val().length != 0) {
                            contextString = contextString + '"FGColorCode":"' + $("#cTextFGColor").val() + '",';
                        } else {
                            $("#cTextFGColor").focus();
                            swal("[[[Invalid]]] !", "[[[Foreground]]] [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 309:       //"Text List Card":
                        if ($("#cTextListTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cTextListTitle").val() + '",';
                        } else {
                            $("#cTextListTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        var TextObjs = "", Text1Objs = "", Text2Objs = "", Text3Objs = "", Text4Objs = "";
                        if ($("#cTextListText1Source").val() != null) {
                            Text1Objs = Text1Objs + '"Field":"' + $("#cTextListText1Source").val() + '",';
                        } else {
                            $("#cTextListText1Source").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 1 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextListText1Display").val().length != 0) {
                            Text1Objs = Text1Objs + '"Display":"' + $("#cTextListText1Display").val() + '",';
                        } else {
                            $("#cTextListText1Display").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 1 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextListText1BallColor").val().length != 0) {
                            Text1Objs = Text1Objs + '"BallColorCode":"' + $("#cTextListText1BallColor").val() + '"';
                        } else {
                            $("#cTextListText1BallColor").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 1 [[[Ball]]] [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        TextObjs = "{" + Text1Objs + "}";

                        if ($("#cTextListText2Source").val() != null) {
                            Text2Objs = Text2Objs + '"Field":"' + $("#cTextListText2Source").val() + '",';
                        } else {
                            $("#cTextListText2Source").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 2 [[[Source]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextListText2Display").val().length != 0) {
                            Text2Objs = Text2Objs + '"Display":"' + $("#cTextListText2Display").val() + '",';
                        } else {
                            $("#cTextListText2Display").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 2 [[[Display]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cTextListText2BallColor").val().length != 0) {
                            Text2Objs = Text2Objs + '"BallColorCode":"' + $("#cTextListText2BallColor").val() + '"';
                        } else {
                            $("#cTextListText2BallColor").focus();
                            swal("[[[Invalid]]] !", "[[[Text]]] 2 [[[Ball]]] [[[Color]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        TextObjs = TextObjs + ",{" + Text2Objs + "}";

                        if ($("#cTextListText3Source").val() != null && $("#cTextListText3Display").val().length != 0 && $("#cTextListText3BallColor").val().length != 0) {
                            Text3Objs = Text3Objs + '"Field":"' + $("#cTextListText3Source").val() + '",';
                            Text3Objs = Text3Objs + '"Display":"' + $("#cTextListText3Display").val() + '",';
                            Text3Objs = Text3Objs + '"BallColorCode":"' + $("#cTextListText3BallColor").val() + '"';
                            TextObjs = TextObjs + ",{" + Text3Objs + "}";
                        }

                        if ($("#cTextListText4Source").val() != null && $("#cTextListText4Display").val().length != 0 && $("#cTextListText4BallColor").val().length != 0) {
                            Text4Objs = Text4Objs + '"Field":"' + $("#cTextListText4Source").val() + '",';
                            Text4Objs = Text4Objs + '"Display":"' + $("#cTextListText4Display").val() + '",';
                            Text4Objs = Text4Objs + '"BallColorCode":"' + $("#cTextListText4BallColor").val() + '"';
                            TextObjs = TextObjs + ",{" + Text4Objs + "}";
                        }
                        contextString = contextString + '"Texts":[' + TextObjs + "]";
                        break;

                    case 310:       //"Alarm List Card":
                        if ($("#cAlarmListTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cAlarmListTitle").val() + '",';
                        } else {
                            $("#cAlarmListTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cAlarmListDataRange").val() != null) {
                            contextString = contextString + '"DataRange":"' + $("#cAlarmListDataRange").val() + '",';
                        } else {
                            $("#cAlarmListDataRange").focus();
                            swal("[[[Invalid]]] !", "[[[Data Range]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 311:       //"Google Map Location Trace"
                        if ($("#cGoogleMapLocationTraceTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cGoogleMapLocationTraceTitle").val() + '",';
                        } else {
                            $("#cGoogleMapLocationTraceTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cGoogleMapLocationTraceLatitude").val().length != 0) {
                            contextString = contextString + '"Latitude":"' + $("#cGoogleMapLocationTraceLatitude").val() + '",';
                        } else {
                            $("#cGoogleMapLocationTraceLatitude").focus();
                            swal("[[[Invalid]]] !", "[[[Latitude]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cGoogleMapLocationTraceLongitude").val().length != 0) {
                            contextString = contextString + '"Longitude":"' + $("#cGoogleMapLocationTraceLongitude").val() + '",';
                        } else {
                            $("#cGoogleMapLocationTraceLongitude").focus();
                            swal("[[[Invalid]]] !", "[[[Longitude]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }

                        if ($("#cInitialGoogleMapLocationTraceZoom").val() != null) {
                            contextString = contextString + '"MapZoom":"' + $("#cInitialGoogleMapLocationTraceZoom").val() + '",';
                        } else {
                            contextString = contextString + '"MapZoom":"12",';
                        }
                        break;
                    case 312:       //Simple OEE Card
                        if ($("#cSimpleOEETitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cSimpleOEETitle").val() + '",';
                        } else {
                            $("#cSimpleOEETitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cSimpleOEE_GoodUnits").val() != null) {
                            contextString = contextString + '"GoodCount":"' + $("#cSimpleOEE_GoodUnits").val() + '",';
                        } else {
                            $("#cSimpleOEE_GoodUnits").focus();
                            swal("[[[Invalid]]] !", "[[[Good Count]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cSimpleOEE_IdealCycleTime").val() != null) {
                            contextString = contextString + '"IdealCycleTime":"' + $("#cSimpleOEE_IdealCycleTime").val() + '",';
                        } else {
                            $("#cSimpleOEE_IdealCycleTime").focus();
                            swal("[[[Invalid]]] !", "[[[Ideal Cycle Time]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cSimpleOEE_PlannedProductionTime").val() != null) {
                            contextString = contextString + '"PlannedProductionTime":"' + $("#cSimpleOEE_PlannedProductionTime").val() + '",';
                        } else {
                            $("#cSimpleOEE_PlannedProductionTime").focus();
                            swal("[[[Invalid]]] !", "[[[Planned Production Time]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cSimpleOEEThreadsLow").val().length != 0 && $.isNumeric($("#cSimpleOEEThreadsLow").val()) && $("#cSimpleOEEThreadsLow").val()>=0 && $("#cSimpleOEEThreadsLow").val()<=100) {
                            contextString = contextString + '"ThreadsLow":"' + $("#cSimpleOEEThreadsLow").val() + '",';
                        } else {
                            $("#cSimpleOEEThreadsLow").focus();
                            swal("[[[Invalid]]] !", "[[[Threads]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cSimpleOEEThreadsHigh").val().length != 0 && $.isNumeric($("#cSimpleOEEThreadsHigh").val()) && $("#cSimpleOEEThreadsHigh").val()>=0 && $("#cSimpleOEEThreadsHigh").val()<=100) {
                            contextString = contextString + '"ThreadsHigh":"' + $("#cSimpleOEEThreadsHigh").val() + '"';
                        } else {
                            $("#cSimpleOEEThreadsHigh").focus();
                            swal("[[[Invalid]]] !", "[[[Threads]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 313:       //Preferred OEE Card
                        if ($("#cPreferredOEETitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cPreferredOEETitle").val() + '",';
                        } else {
                            $("#cPreferredOEETitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_RunTime").val() != null) {
                            contextString = contextString + '"RunTime":"' + $("#cPreferredOEE_RunTime").val() + '",';
                        } else {
                            $("#cPreferredOEE_RunTime").focus();
                            swal("[[[Invalid]]] !", "[[[Run Time]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_PlannedProductionTime").val() != null) {
                            contextString = contextString + '"PlannedProductionTime":"' + $("#cPreferredOEE_PlannedProductionTime").val() + '",';
                        } else {
                            $("#cPreferredOEE_PlannedProductionTime").focus();
                            swal("[[[Invalid]]] !", "[[[Planned Production Time]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_ProducedUnits").val() != null) {
                            contextString = contextString + '"ProducedUnits":"' + $("#cPreferredOEE_ProducedUnits").val() + '",';
                        } else {
                            $("#cPreferredOEE_ProducedUnits").focus();
                            swal("[[[Invalid]]] !", "[[[Produced Units]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_ExpectedUnits").val() != null) {
                            contextString = contextString + '"ExpectedUnits":"' + $("#cPreferredOEE_ExpectedUnits").val() + '",';
                        } else {
                            $("#cPreferredOEE_ExpectedUnits").focus();
                            swal("[[[Invalid]]] !", "[[[Expected Units]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_GoodUnits").val() != null) {
                            contextString = contextString + '"GoodUnits":"' + $("#cPreferredOEE_GoodUnits").val() + '",';
                        } else {
                            $("#cPreferredOEE_GoodUnits").focus();
                            swal("[[[Invalid]]] !", "[[[Good Units]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEE_RejectedUnits").val() != null) {
                            contextString = contextString + '"RejectedUnits":"' + $("#cPreferredOEE_RejectedUnits").val() + '",';
                        } else {
                            $("#cPreferredOEE_RejectedUnits").focus();
                            swal("[[[Invalid]]] !", "[[[Rejected Units]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEEThreadsLow").val().length != 0 && $.isNumeric($("#cPreferredOEEThreadsLow").val()) && $("#cPreferredOEEThreadsLow").val()>=0 && $("#cPreferredOEEThreadsLow").val()<=100) {
                            contextString = contextString + '"PreferredOEEThreadsLow":"' + $("#cPreferredOEEThreadsLow").val() + '",';
                        } else {
                            $("#cPreferredOEEThreadsLow").focus();
                            swal("[[[Invalid]]] !", "OEE [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPreferredOEEThreadsHigh").val().length != 0 && $.isNumeric($("#cPreferredOEEThreadsHigh").val()) && $("#cPreferredOEEThreadsHigh").val()>=0 && $("#cPreferredOEEThreadsHigh").val()<=100) {
                            contextString = contextString + '"PreferredOEEThreadsHigh":"' + $("#cPreferredOEEThreadsHigh").val() + '",';
                        } else {
                            $("#cPreferredOEEThreadsHigh").focus();
                            swal("[[[Invalid]]] !", "OEE [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cAvailabilityThreadsLow").val().length != 0 && $.isNumeric($("#cAvailabilityThreadsLow").val()) && $("#cAvailabilityThreadsLow").val()>=0 && $("#cAvailabilityThreadsLow").val()<=100) {
                            contextString = contextString + '"AvailabilityThreadsLow":"' + $("#cAvailabilityThreadsLow").val() + '",';
                        } else {
                            $("#cAvailabilityThreadsLow").focus();
                            swal("[[[Invalid]]] !", "Availability [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cAvailabilityThreadsHigh").val().length != 0 && $.isNumeric($("#cAvailabilityThreadsHigh").val()) && $("#cAvailabilityThreadsHigh").val()>=0 && $("#cAvailabilityThreadsHigh").val()<=100) {
                            contextString = contextString + '"AvailabilityThreadsHigh":"' + $("#cAvailabilityThreadsHigh").val() + '",';
                        } else {
                            $("#cAvailabilityThreadsHigh").focus();
                            swal("[[[Invalid]]] !", "Availability [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPerformanceThreadsLow").val().length != 0 && $.isNumeric($("#cPerformanceThreadsLow").val()) && $("#cPerformanceThreadsLow").val()>=0 && $("#cPerformanceThreadsLow").val()<=100) {
                            contextString = contextString + '"PerformanceThreadsLow":"' + $("#cPerformanceThreadsLow").val() + '",';
                        } else {
                            $("#cPerformanceThreadsLow").focus();
                            swal("[[[Invalid]]] !", "Performance [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cPerformanceThreadsHigh").val().length != 0 && $.isNumeric($("#cPerformanceThreadsHigh").val()) && $("#cPerformanceThreadsHigh").val()>=0 && $("#cPerformanceThreadsHigh").val()<=100) {
                            contextString = contextString + '"PerformanceThreadsHigh":"' + $("#cPerformanceThreadsHigh").val() + '",';
                        } else {
                            $("#cPerformanceThreadsHigh").focus();
                            swal("[[[Invalid]]] !", "Performance [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cQualityThreadsLow").val().length != 0 && $.isNumeric($("#cQualityThreadsLow").val()) && $("#cQualityThreadsLow").val()>=0 && $("#cQualityThreadsLow").val()<=100) {
                            contextString = contextString + '"QualityThreadsLow":"' + $("#cQualityThreadsLow").val() + '",';
                        } else {
                            $("#cQualityThreadsLow").focus();
                            swal("[[[Invalid]]] !", "Quality [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cQualityThreadsHigh").val().length != 0 && $.isNumeric($("#cQualityThreadsHigh").val()) && $("#cQualityThreadsHigh").val()>=0 && $("#cQualityThreadsHigh").val()<=100) {
                            contextString = contextString + '"QualityThreadsHigh":"' + $("#cQualityThreadsHigh").val() + '",';
                        } else {
                            $("#cQualityThreadsHigh").focus();
                            swal("[[[Invalid]]] !", "Quality [[[Threadshold]]] [[[is necessary]]] [[[and must between 0 to 100]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        break;
                    case 314:       //'HTML Content':
                        if ($("#cHTMLContentTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cHTMLContentTitle").val() + '",';
                        } else {
                            $("#cHTMLContentTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cHTMLContentSourceFrom").val() != null) {
                            contextString = contextString + '"HTMLContentSourceFrom":"' + $("#cHTMLContentSourceFrom").val() + '",';
                        } else {
                            $("#cHTMLContentSourceFrom").focus();
                            swal("[[[Invalid]]] !", "[[[HTML Source From]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cHTMLContentSourceFrom").val() == "inputValue") {
                            if ($("#cHTMLContentSourceInputValue").val().length != 0) {
                                var validHTMLContent = $("#cHTMLContentSourceInputValue").val().replaceAll('"', '\'');
                                $("#cHTMLContentSourceInputValue").val(validHTMLContent);
                                contextString = contextString + '"HTMLContent":"' + validHTMLContent + '",';
                            } else {
                                $("#cHTMLContentInputValue").focus();
                                swal("[[[Invalid]]] !", "[[[HTML Content]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }
                        }
                        else {
                            if ($("#cHTMLContentSourceMessageField").val() != null) {
                                contextString = contextString + '"HTMLContent":"' + $("#cHTMLContentSourceMessageField").val() + '",';
                            } else {
                                $("#cHTMLContentSourceMessageField").focus();
                                swal("[[[Invalid]]] !", "[[[HTML Content]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }
                        }
                        break;
                    case 315:       //"Google Map Circle"
                        if ($("#cGoogleMapCircleTitle").val().length != 0) {
                            contextString = '"Title":"' + $("#cGoogleMapCircleTitle").val() + '",';
                        } else {
                            $("#cGoogleMapCircleTitle").focus();
                            swal("[[[Invalid]]] !", "[[[Title]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLocationSourceFrom").val() != null) {
                            contextString = contextString + '"LocationSourceFrom":"' + $("#cLocationSourceFrom").val() + '",';
                        } else {
                            $("#cLocationSourceFrom").focus();
                            swal("[[[Invalid]]] !", "[[[Location Source From]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cLocationSourceFrom").val() == "messageField") {                            
                            if ($("#cGoogleMapCircleLatitude").val().length != 0) {
                                contextString = contextString + '"Latitude":"' + $("#cGoogleMapCircleLatitude").val() + '",';
                            } else {
                                $("#cGoogleMapCircleLatitude").focus();
                                swal("[[[Invalid]]] !", "[[[Latitude]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }

                            if ($("#cGoogleMapCircleLongitude").val().length != 0) {
                                contextString = contextString + '"Longitude":"' + $("#cGoogleMapCircleLongitude").val() + '",';
                            } else {
                                $("#cGoogleMapCircleLongitude").focus();
                                swal("[[[Invalid]]] !", "[[[Longitude]]] [[[is necessary]]].");
                                return {
                                    contextString: contextString,
                                    isValidated: false
                                };
                            }                            
                        }
                        if ($("#cGoogleMapRadius").val() != null) {
                            contextString = contextString + '"Radius":"' + $("#cGoogleMapRadius").val() + '",';
                        } else {
                            $("#cGoogleMapRadius").focus();
                            swal("[[[Invalid]]] !", "[[[Radius]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#c1by1GoogleMapCircleZoom").val() != null) {
                            contextString = contextString + '"oneByoneZoom":"' + $("#c1by1GoogleMapCircleZoom").val() + '",';
                        } else {
                            $("#c1by1GoogleMapCircleZoom").focus();
                            swal("[[[Invalid]]] !", "[[[1 by 1 Zoom]]] [[[is necessary]]].");
                            return {
                                contextString: contextString,
                                isValidated: false
                            };
                        }
                        if ($("#cInitialGoogleMapCircleZoom").val() != null) {
                            contextString = contextString + '"MapZoom":"' + $("#cInitialGoogleMapCircleZoom").val() + '",';
                        } else {
                            contextString = contextString + '"MapZoom":"12",';
                        }                       
                        break;
                }
            }
            return {
                contextString: contextString,
                isValidated: true
            };
        }

        function dataValidation(postData, withContextData) {
            if ($("#cWidgetClassName").val() != null) {
                postData.append('WidgetClassKey', $("#cWidgetClassName").val());
            } else {
                $("#cWidgetClassName").focus();
                swal("[[[Invalid]]] !", "[[[Visual Type]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            if ($("#cName").val().length != 0) {
                postData.append('Name', $("#cName").val());
            } else {
                $("#cName").focus();
                swal("[[[Invalid]]] !", "[[[Name]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            if ($('#cWidgetClassName').val() != '310')
            {
                if ($("#cMessageCatalogID").val() != null) {
                    postData.append('MessageCatalogId', $("#cMessageCatalogID").val());
                } else {
                    $("#cMessageCatalogID").focus();
                    swal("[[[Invalid]]] !", "[[[Message Catalog]]] [[[is necessary]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
            }

            if (withContextData) {
                var contextData = "{}";
                for (var i in _widgetCatalogJSONObjs) {
                    if (_widgetCatalogJSONObjs[i].Id == _selectedWidgetCatalogId) {
                        contextData = JSON.stringify(_widgetCatalogJSONObjs[i].Context);
                        break;
                    }
                }
                postData.append('Context', contextData);
            }

            postData.append('Level', 'equipment');

            return {
                postData: postData,
                isValidated: true
            }
        }

        $('#EditWidgetContextButton').click(function () {
            var contextObj;
            for (var i in _widgetCatalogJSONObjs) {
                if (_widgetCatalogJSONObjs[i].Id == _selectedWidgetCatalogId) {
                    contextObj = _widgetCatalogJSONObjs[i].Context;
                    break;
                }
            }
            $('#WidgetLineChartDefine').css("display", "none");
            $('#WidgetBarChartDefine').css("display", "none");
            $('#WidgetPieChartDefine').css("display", "none");
            $('#divPercentageTotalSourceMessageField').css("display", "none");
            $('#WidgetPercentageCardtDefine').css("display", "none");
            $('#WidgetTextCardDefine').css("display", "none");
            $('#WidgetAlarmCardDefine').css("display", "none");
            $('#WidgetBasicCardDefine').css("display", "none");
            $('#WidgetGoogleMapCardDefine').css("display", "none");
            $('#WidgetGoogleMapLocationTraceDefine').css("display", "none");
            $('#WidgetTextListCardtDefine').css("display", "none");
            $('#WidgetAlarmListDefine').css("display", "none");
            $('#WidgetSimpleOEECardtDefine').css("display", "none");
            $('#WidgetPreferredOEECardtDefine').css("display", "none");
            $('#WidgetHTMLContentDefine').css("display", "none");
            $('#WidgetGoogleMapCircleDefine').css("display", "none");

            switch (eval($('#cWidgetClassName').val())) {
                case 300:       //'Alarm Card':
                    $('#WidgetAlarmCardDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Alarm Card]]] [[[Definition]]]');
                    $('#cAlarmTitle').val(contextObj.Title);
                    $('#cShowAlarmDuration').val(contextObj.ShowAlarmDuration);
                    $('#cAlarmTextColor').val(contextObj.TextColorCode);
                    if (contextObj.TextColorCode != null)
                        $('#cAlarmTextColor').css("background-color", "#" + contextObj.TextColorCode);
                    else
                        $('#cAlarmTextColor').css("background-color", "");
                    $('#cAlarmBGColor').val(contextObj.BGColorCode);
                    if (contextObj.BGColorCode != null)
                        $('#cAlarmBGColor').css("background-color", "#" + contextObj.BGColorCode);
                    else
                        $('#cAlarmBGColor').css("background-color", "");
                    $('#cAlarmNormalBGColor').val(contextObj.NormalBGColorCode);
                    if (contextObj.NormalBGColorCode != null)
                        $('#cAlarmNormalBGColor').css("background-color", "#" + contextObj.NormalBGColorCode);
                    else
                        $('#cAlarmNormalBGColor').css("background-color", "");
                    break;
                case 301:       //'Bar Chart':
                    $('#WidgetBarChartDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Bar Chart]]] [[[Definition]]]');
                    $('#cBarTitle').val(contextObj.Title);
                    $('#cBarSpace').val(contextObj.BarSpace);
                    $('#cBarXAxisSource').val(contextObj.Axis_X);
                    $('#cBarXAxisDisplay').val(contextObj.Axis_X_Display);
                    for (var i in contextObj.Axis_Y_Values) {
                        var r = parseInt(i) + 1;
                        $('#cBarYAxis' + r + 'Source').val(contextObj.Axis_Y_Values[i].Axis_Y);
                        $('#cBarYAxis' + r + 'Display').val(contextObj.Axis_Y_Values[i].Display);
                        $('#cBarYAxis' + r + 'Color').val(contextObj.Axis_Y_Values[i].ColorCode);
                        $('#cBarYAxis' + r + 'Color').css("background-color", "#" + contextObj.Axis_Y_Values[i].ColorCode);
                    }
                    break;
                case 302:       //'Basic Card':
                    $('#WidgetBasicCardDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Basic Card]]] [[[Definition]]]');
                    $('#cBasicTitle').val(contextObj.Title);
                    break;
                case 303:       //'Google Map Card':
                    $('#WidgetGoogleMapCardDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Google Map Card]]] [[[Definition]]]');
                    $('#cGoogleMapTitle').val(contextObj.Title);
                    if (contextObj.MapZoom != null)
                        $('#cInitialGoogleMapZoom').val(contextObj.MapZoom);
                    else
                        $('#cInitialGoogleMapZoom').val('');
                    break;
                case 305:       //'Line Chart':
                    $('#WidgetLineChartDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Line Chart]]] [[[Definition]]]');
                    $('#cLineTitle').val(contextObj.Title);
                    $('#cLinePixel').val(contextObj.LinePixel);
                    $('#cLineXAxisSource').val(contextObj.Axis_X);
                    $('#cLineXAxisDisplay').val(contextObj.Axis_X_Display);
                    $('#cLineYAxis1Source').val("");
                    $('#cLineYAxis1Scale').val("");
                    $('#cLineYAxis2Source').val("");
                    $('#cLineYAxis2Scale').val("");
                    $('#cLineYAxis3Source').val("");
                    $('#cLineYAxis3Scale').val("");
                    $('#cLineYAxis1Display').val("");
                    $('#cLineYAxis2Display').val("");
                    $('#cLineYAxis3Display').val("");
                    $('#cLineYAxis1Color').val("");
                    $('#cLineYAxis2Color').val("");
                    $('#cLineYAxis3Color').val("");
                    $('#cLineYAxis1Color').css("background-color", "");
                    $('#cLineYAxis2Color').css("background-color", "");
                    $('#cLineYAxis3Color').css("background-color", "");
                    for (var i in contextObj.Axis_Y_Values) {
                        var r = parseInt(i) + 1;
                        $('#cLineYAxis' + r + 'Source').val(contextObj.Axis_Y_Values[i].Axis_Y);
                        $('#cLineYAxis' + r + 'Scale').val(contextObj.Axis_Y_Values[i].Scale_Y);
                        $('#cLineYAxis' + r + 'Display').val(contextObj.Axis_Y_Values[i].Display);
                        $('#cLineYAxis' + r + 'Color').val(contextObj.Axis_Y_Values[i].ColorCode);
                        $('#cLineYAxis' + r + 'Color').css("background-color", "#" + contextObj.Axis_Y_Values[i].ColorCode);
                    }
                    break;
                case 306:       //'Percentage Card':
                    $('#WidgetPercentageCardtDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Percentage Card]]] [[[Definition]]]');
                    $('#cPercentageTitle').val(contextObj.Title);
                    $('#cPercentageTotalSourceFrom').val(contextObj.TotalNumberFrom);
                    if (contextObj.TotalNumberFrom == 'inputValue') {
                        $('#cPercentageTotalSourceInputValue').css("display", "block");
                        $('#cPercentageTotalSourceMessageField').css("display", "none");
                        $('#cPercentageTotalSourceInputValue').val(contextObj.TotalNumber);
                    }
                    else {
                        $('#cPercentageTotalSourceInputValue').css("display", "none");
                        $('#cPercentageTotalSourceMessageField').css("display", "block");
                        $('#cPercentageTotalSourceMessageField').val(contextObj.TotalNumber);
                    }

                    $('#cPercentageCurrentNumber').val(contextObj.Field);
                    $('#cPercentageFGColor').val(contextObj.FGColorCode);
                    if (contextObj.FGColorCode != null)
                        $('#cPercentageFGColor').css("background-color", "#" + contextObj.FGColorCode);
                    else
                        $('#cPercentageFGColor').css("background-color", "");
                    $('#cPercentageBGColor').val(contextObj.BGColorCode);
                    if (contextObj.BGColorCode != null)
                        $('#cPercentageBGColor').css("background-color", "#" + contextObj.BGColorCode);
                    else
                        $('#cPercentageBGColor').css("background-color", "");
                    break;
                case 307:       //'Pie Chart':
                    $('#WidgetPieChartDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Pie Chart]]] [[[Definition]]]');
                    $('#cPieTitle').val(contextObj.Title);
                    $('#cPieValue1Source').val("");
                    $('#cPieValue1Display').val("");
                    $('#cPieValue1Color').val("");
                    $('#cPieValue1Color').css("background-color", "");
                    $('#cPieValue2Source').val("");
                    $('#cPieValue2Display').val("");
                    $('#cPieValue2Color').val("");
                    $('#cPieValue2Color').css("background-color", "");
                    $('#cPieValue3Source').val("");
                    $('#cPieValue3Display').val("");
                    $('#cPieValue3Color').val("");
                    $('#cPieValue3Color').css("background-color", "");
                    $('#cPieValue4Source').val("");
                    $('#cPieValue4Display').val("");
                    $('#cPieValue4Color').val("");
                    $('#cPieValue4Color').css("background-color", "");
                    for (var i in contextObj.Values) {
                        var r = parseInt(i) + 1;
                        $('#cPieValue' + r + 'Source').val(contextObj.Values[i].Field);
                        $('#cPieValue' + r + 'Display').val(contextObj.Values[i].Display);
                        $('#cPieValue' + r + 'Color').val(contextObj.Values[i].ColorCode);
                        $('#cPieValue' + r + 'Color').css("background-color", "#" + contextObj.Values[i].ColorCode);
                    }
                    break;
                case 308:       //'Text Card':
                    $('#WidgetTextCardDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Text Card]]] [[[Definition]]]');
                    $('#cTextTitle').val(contextObj.Title);
                    $('#cTextDataSource').val(contextObj.Field);
                    $('#cTextFGColor').val(contextObj.FGColorCode);
                    if (contextObj.FGColorCode != null)
                        $('#cTextFGColor').css("background-color", "#" + contextObj.FGColorCode);
                    else
                        $('#cTextFGColor').css("background-color", "");
                    break;
                case 309:       //'Text List Card':
                    $('#WidgetTextListCardtDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Text List Card]]] [[[Definition]]]');
                    $('#cTextListTitle').val(contextObj.Title);
                    $('#cTextListText1Source').val("");
                    $('#cTextListText1Display').val("");
                    $('#cTextListText1BallColor').val("");
                    $('#cTextListText1BallColor').css("background-color", "");
                    $('#cTextListText2Source').val("");
                    $('#cTextListText2Display').val("");
                    $('#cTextListText2BallColor').val("");
                    $('#cTextListText2BallColor').css("background-color", "");
                    $('#cTextListText3Source').val("");
                    $('#cTextListText3Display').val("");
                    $('#cTextListText3BallColor').val("");
                    $('#cTextListText3BallColor').css("background-color", "");
                    $('#cTextListText4Source').val("");
                    $('#cTextListText4Display').val("");
                    $('#cTextListText4BallColor').val("");
                    $('#cTextListText4BallColor').css("background-color", "");
                    for (var i in contextObj.Texts) {
                        var r = parseInt(i) + 1;
                        $('#cTextListText' + r + 'Source').val(contextObj.Texts[i].Field);
                        $('#cTextListText' + r + 'Display').val(contextObj.Texts[i].Display);
                        $('#cTextListText' + r + 'BallColor').val(contextObj.Texts[i].BallColorCode);
                        $('#cTextListText' + r + 'BallColor').css("background-color", "#" + contextObj.Texts[i].BallColorCode);
                    }
                    break;
                case 310:       //'Alart List':
                    $('#WidgetAlarmListDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Alarm List]]] [[[Definition]]]');
                    $('#cAlarmListTitle').val(contextObj.Title);
                    $('#cAlarmListDataRange').val(contextObj.DataRange);
                    break;
                case 311:       //Google Map Location Trace
                    $('#WidgetGoogleMapLocationTraceDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Google Map Location Trace]]] [[[Definition]]]');
                    $('#cGoogleMapLocationTraceTitle').val(contextObj.Title);

                    if (contextObj.Latitude != null)
                        $('#cGoogleMapLocationTraceLatitude').val(contextObj.Latitude);
                    else
                        $('#cGoogleMapLocationTraceLatitude').val('');
                    if (contextObj.Longitude != null)
                        $('#cGoogleMapLocationTraceLongitude').val(contextObj.Longitude);
                    else
                        $('#cGoogleMapLocationTraceLongitude').val('');

                    if (contextObj.MapZoom != null)
                        $('#cInitialGoogleMapLocationTraceZoom').val(contextObj.MapZoom);
                    else
                        $('#cInitialGoogleMapLocationTraceZoom').val('');
                    break;
                case 312:       //Simple OEE Card
                    $('#WidgetSimpleOEECardtDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Simple OEE Card]]] [[[Definition]]]');
                    $('#cSimpleOEETitle').val(contextObj.Title);
                    if (contextObj.GoodCount != null)
                        $('#cSimpleOEE_GoodUnits').val(contextObj.GoodCount);
                    else
                        $('#cSimpleOEE_GoodUnits').val('');
                    if (contextObj.IdealCycleTime != null)
                        $('#cSimpleOEE_IdealCycleTime').val(contextObj.IdealCycleTime);
                    else
                        $('#cSimpleOEE_IdealCycleTime').val('');
                    if (contextObj.PlannedProductionTime != null)
                        $('#cSimpleOEE_PlannedProductionTime').val(contextObj.PlannedProductionTime);
                    else
                        $('#cSimpleOEE_PlannedProductionTime').val('');
                    if (contextObj.ThreadsLow != null)
                        $('#cSimpleOEEThreadsLow').val(contextObj.ThreadsLow);
                    else
                        $('#cSimpleOEEThreadsLow').val('');
                    if (contextObj.ThreadsHigh != null)
                        $('#cSimpleOEEThreadsHigh').val(contextObj.ThreadsHigh);
                    else
                        $('#cSimpleOEEThreadsHigh').val('');

                    break;
                case 313:       //Preferred OEE Card
                    $('#WidgetPreferredOEECardtDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Preferred OEE Card]]] [[[Definition]]]');
                    $('#cPreferredOEETitle').val(contextObj.Title);
                    if (contextObj.RunTime != null)
                        $('#cPreferredOEE_RunTime').val(contextObj.RunTime);
                    else
                        $('#cPreferredOEE_RunTime').val('');
                    if (contextObj.PlannedProductionTime != null)
                        $('#cPreferredOEE_PlannedProductionTime').val(contextObj.PlannedProductionTime);
                    else
                        $('#cPreferredOEE_PlannedProductionTime').val('');
                    if (contextObj.ProducedUnits != null)
                        $('#cPreferredOEE_ProducedUnits').val(contextObj.ProducedUnits);
                    else
                        $('#cPreferredOEE_ProducedUnits').val('');
                    if (contextObj.ExpectedUnits != null)
                        $('#cPreferredOEE_ExpectedUnits').val(contextObj.ExpectedUnits);
                    else
                        $('#cPreferredOEE_ExpectedUnits').val('');
                    if (contextObj.GoodUnits != null)
                        $('#cPreferredOEE_GoodUnits').val(contextObj.GoodUnits);
                    else
                        $('#cPreferredOEE_GoodUnits').val('');
                    if (contextObj.RejectedUnits != null)
                        $('#cPreferredOEE_RejectedUnits').val(contextObj.RejectedUnits);
                    else
                        $('#cPreferredOEE_RejectedUnits').val('');

                    $('#cPreferredOEEThreadsLow').val(contextObj.PreferredOEEThreadsLow);
                    $('#cPreferredOEEThreadsHigh').val(contextObj.PreferredOEEThreadsHigh);
                    $('#cAvailabilityThreadsLow').val(contextObj.AvailabilityThreadsLow);
                    $('#cAvailabilityThreadsHigh').val(contextObj.AvailabilityThreadsHigh);
                    $('#cPerformanceThreadsLow').val(contextObj.PerformanceThreadsLow);
                    $('#cPerformanceThreadsHigh').val(contextObj.PerformanceThreadsHigh);
                    $('#cQualityThreadsLow').val(contextObj.QualityThreadsLow);
                    $('#cQualityThreadsHigh').val(contextObj.QualityThreadsHigh);
                    break;
                case 314:       //'HTML Content Card':
                    $('#WidgetHTMLContentDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[HTML Content]]] [[[Definition]]]');
                    $('#cHTMLContentTitle').val(contextObj.Title);
                    $('#cHTMLContentSourceFrom').val(contextObj.HTMLContentSourceFrom);
                    if (contextObj.HTMLContentSourceFrom == 'inputValue') {
                        $('#cHTMLContentSourceInputValue').css("display", "block");
                        $('#cHTMLContentSourceMessageField').css("display", "none");
                        $('#cHTMLContentSourceInputValue').html(contextObj.HTMLContent);
                    }
                    else {
                        $('#cHTMLContentSourceInputValue').css("display", "none");
                        $('#cHTMLContentSourceMessageField').css("display", "block");
                        $('#cHTMLContentSourceMessageField').val(contextObj.HTMLContent);
                    }                    
                    break;
                case 315:       //Google Map Circle
                    $('#WidgetGoogleMapCircleDefine').css("display", "block");
                    $('#WidgetContextPanelTitle').html('[[[Google Map Circle]]] [[[Definition]]]');
                    $('#cGoogleMapCircleTitle').val(contextObj.Title);

                    if (contextObj.LocationSourceFrom == 'messageField') {
                        $('#cLocationSourceFrom').val('messageField');
                        $('#divGoogleMapCircleLat').css("display", "block");
                        $('#divGoogleMapCircleLong').css("display", "block");
                        $('#cGoogleMapCircleLatitude').val(contextObj.Latitude);
                        $('#cGoogleMapCircleLongitude').val(contextObj.Longitude);
                    }
                    else {
                        $('#cLocationSourceFrom').val('equipmentMeta');
                        $('#divGoogleMapCircleLat').css("display", "none");
                        $('#divGoogleMapCircleLong').css("display", "none");
                        $('#cGoogleMapCircleLatitude').val('');
                        $('#cGoogleMapCircleLongitude').val('');
                    }

                    if (contextObj.Radius != null)
                        $('#cGoogleMapRadius').val(contextObj.Radius);
                    else
                        $('#cGoogleMapRadius').val('');
                    
                    if (contextObj.oneByoneZoom != null)
                        $('#c1by1GoogleMapCircleZoom').val(contextObj.oneByoneZoom);
                    else
                        $('#c1by1GoogleMapCircleZoom').val('');

                    if (contextObj.MapZoom != null)
                        $('#cInitialGoogleMapCircleZoom').val(contextObj.MapZoom);
                    else
                        $('#cInitialGoogleMapCircleZoom').val('');
                    break;
            }
            $('#panel_widgetContext').css("display", "block");
            $('#panel_detail').css("display", "none");
        });

        $('#AddNewWidgetCatalogButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[Add New]]] [[[WidgetCatalog]]]");
            $('#DeleteWidgetCatalogButton').css("display", "none");
            $('#UpdateWidgetCatalogButton').css("display", "none");
            $('#EditWidgetContextButton').css("display", "none");
            $('#panel_widgetContext').css("display", "none");
            $('#CancelAddNewWidgetCatalogButton').css("display", "inline");

            $('#SubmitNewWidgetCatalogButton').css("display", "inline");

            $('#AddNewWidgetCatalogButton').css("display", "none");
            CleanFormInput();
            _selectedWidgetCatalogId = -1;
            $("#cWidgetClassName").focus();
            window.scrollTo(0, 400);
        });

        $('#CancelAddNewWidgetCatalogButton').click(function () {
            $('#panel_detail').css("display", "none");
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteWidgetCatalogButton').css("display", "inline");
            $('#UpdateWidgetCatalogButton').css("display", "inline");
            $('#EditWidgetContextButton').css("display", "inline");
            $('#CancelAddNewWidgetCatalogButton').css("display", "none");
            $('#SubmitNewWidgetCatalogButton').css("display", "none");

            $('#AddNewWidgetCatalogButton').css("display", "inline");
            CleanFormInput();
            window.scrollTo(0, 0);
        });

        $('#SubmitNewWidgetCatalogButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData, true);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoWidgetCatalogTransactionAjax("addwidgetCatalog", -1, result.postData);

                        $('#panel_detail').css("display", "none");
                        $('#EditingPanelTitle').html("[[[Detail]]]");
                        $('#DeleteWidgetCatalogButton').css("display", "inline");
                        $('#UpdateWidgetCatalogButton').css("display", "inline");
                        $('#EditWidgetContextButton').css("display", "inline");
                        $('#CancelAddNewWidgetCatalogButton').css("display", "none");
                        $('#SubmitNewWidgetCatalogButton').css("display", "none");

                        $('#AddNewWidgetCatalogButton').css("display", "inline");

                        CleanFormInput();
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteWidgetCatalogButton').click(function () {
            if (_selectedWidgetCatalogId < 0)
                toastr["error"]("[[[No Widget Catalog Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoWidgetCatalogTransactionAjax("deletewidgetCatalog", _selectedWidgetCatalogId, null);
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#cPercentageTotalSourceFrom').change(function () {
            $('#cPercentageTotalSourceInputValue').val('');
            $('#cPercentageTotalSourceMessageField').val('');

            if ($('#cPercentageTotalSourceFrom').val() == "inputValue") {
                $('#cPercentageTotalSourceInputValue').css("display", "block");
                $('#cPercentageTotalSourceMessageField').css("display", "none");
            }
            else {
                $('#cPercentageTotalSourceInputValue').css("display", "none");
                $('#cPercentageTotalSourceMessageField').css("display", "block");
            }
        });

        $('#cHTMLContentSourceFrom').change(function () {
            $('#cHTMLContentSourceInputValue').val('');
            $('#cHTMLContentSourceMessageField').val('');

            if ($('#cHTMLContentSourceFrom').val() == "inputValue") {
                $('#cHTMLContentSourceInputValue').css("display", "block");
                $('#cHTMLContentSourceMessageField').css("display", "none");
            }
            else {
                $('#cHTMLContentSourceInputValue').css("display", "none");
                $('#cHTMLContentSourceMessageField').css("display", "block");
            }
        });

        $('#cLocationSourceFrom').change(function () {
            if ($('#cLocationSourceFrom').val() == "equipmentMeta") {
                $('#divGoogleMapCircleLat').css("display", "none");
                $('#divGoogleMapCircleLong').css("display", "none");
            }
            else {
                $('#divGoogleMapCircleLat').css("display", "block");
                $('#divGoogleMapCircleLong').css("display", "block");
            }
        });

        $('#UpdateWidgetContextButton').click(function () {
            if (_selectedWidgetCatalogId < 0)
                toastr["error"]("[[[No Widget Catalog Select]]].");
            else {
                var postData = new FormData();
                dataValidation(postData, false);

                var contextString;
                var result = dataContextValidation(contextString);
                contextData = "{" + result.contextString + "}";
                postData.append('Context', contextData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            DoWidgetCatalogTransactionAjax("updatewidgetCatalog", _selectedWidgetCatalogId, postData);
                            CleanFormInput();
                            $('#panel_widgetContext').css("display", "none");
                            window.scrollTo(0, 0);
                        }
                    });
                }
            }

        });

        $('#UpdateWidgetCatalogButton').click(function () {
            if (_selectedWidgetCatalogId < 0)
                toastr["error"]("[[[No Widget Catalog Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData, true);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            DoWidgetCatalogTransactionAjax("updatewidgetCatalog", _selectedWidgetCatalogId, result.postData);
                            CleanFormInput();
                            $('#panel_detail').css("display", "none");
                            window.scrollTo(0, 0);
                        }
                    });
                }
            }
        });

        $('#cWidgetClassName').change(function () {
            ChangeImgPhotoURL($('#cWidgetClassName').val());
        });

    });
</script>
