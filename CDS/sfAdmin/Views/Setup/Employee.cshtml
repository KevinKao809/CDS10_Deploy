@{
    ViewBag.Title = "Setup / Employee";
}
<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Setup]]] / [[[Employee]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewEmployeeButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Employee]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="employeeListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Employee]]] [[[Number]]]</th>
                        <th>[[[First Name]]]</th>
                        <th>[[[Last Name]]]</th>
                        <th>[[[E-mail]]]</th>
                        <th>[[[Administrator]]]</th>
                        <th>[[[Role]]]</th>
                    </tr>
                </thead>
                <tbody id="EmployeeList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Detail]]]</h4>
                </div>
                <div style="float:right">
                    <button id="ResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:155px;"> <i class="ti-ruler-pencil m-r-5"></i> <span>[[[Reset Password]]]</span> </button>
                    <button id="DeleteEmployeeButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateEmployeeButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewEmployeeButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewEmployeeButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                    <button id="CancelResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                            <img id="ePhotoURL" src="~/assets/images/default/employee-128.png" class="img-responsive" alt="Logo" style="max-width: 200px; height: inherit; padding-bottom: 15px;">
                            <div class="row" style="width: 200px;">
                                <input id="eLogoFileInput" type="file" class="form-control">
                            </div>
                        </div>
                        <div class="col-sm-10">
                            <form id="employee-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6" >
                                    <div class="form-group">
                                        <label for="inputEmail" class="col-sm-3 control-label">
                                            [[[Email]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eEmail" type="text" class="form-control" placeholder="[[[Email]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputEmployeeNumber" class="col-sm-3 control-label">
                                            [[[Employee]]] [[[Number]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eEmployeeNumber" type="text" class="form-control" placeholder="[[[EmployeeNumber]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputFirstName" class="col-sm-3 control-label">[[[First Name]]]</label>
                                        <div class="col-sm-9">
                                            <input id="eFirstName" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">[[[Last Name]]]</label>
                                        <div class="col-sm-9">
                                            <input id="eLastName" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputAdmin" class="col-sm-3 control-label">[[[Administrator]]]</label>
                                        <div class="col-sm-9">
                                            <input id="eAdmin" type="checkbox" data-plugin="switchery" data-color="#00b19d" data-size="small">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">                                
                                    <div class="form-group">
                                        <label for="inputRole" class="col-sm-3 control-label">
                                            [[[Role]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <div style="float:left">
                                                [[[Granted]]] [[[Roles]]]
                                                <br>
                                                <select size="5" id="selectGrant" style="width:auto; height:200px; min-width: 100px;"></select>
                                            </div>
                                            <div style="float:left">
                                                <i class="zmdi zmdi-swap" style="margin-top:95px; margin-left:10px; margin-right:10px;"></i>
                                            </div>
                                            <div style="float:left">
                                                [[[Available]]] [[[Roles]]]
                                                <br>
                                                <select size="5" id="selectAvailable" style="width:auto; height:200px; min-width: 100px;"></select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6" id="passwordForm" style="display:none">
                                    <div class="form-group">
                                        <label for="inputPassword" class="col-sm-3 control-label">
                                            [[[Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="ePassword" type="password" class="form-control" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputConfirmPassword" class="col-sm-3 control-label">
                                            [[[Confirm Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eConfirmPassword" type="password" class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
            <!--Reset Password Div-->
            <div id="collapseChangePassword" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                        </div>
                        <div class="col-sm-10">
                            <form id="employee-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="inputEmployeeNumber" class="col-sm-3 control-label">
                                            [[[New]]] [[[Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eNewPassword" type="password" class="form-control" placeholder="[[[New]]] [[[Password]]]">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputFirstName" class="col-sm-3 control-label">[[[Confirm New Password]]] (*)</label>
                                        <div class="col-sm-9">
                                            <input id="eConfirmNewPassword" type="password" class="form-control" placeholder="[[[Confirm New Password]]]">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
            <!-- End of Reset Password-->
        </div>
    </div>
</div>
<!-- end row -->
<script type="text/javascript">
    var _employeeJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.EmployeeList'));
    var _userRoleJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.UserRoleList'));
    var _selectedEmployeeId = -1;
    if (_employeeJSONObjs[0] != null) {
        var companyId = _employeeJSONObjs[0].CompanyId;
    }

    function LoadEmployeeListIntoTable() {

        var employeeDataSet = $('#datatable-responsive').DataTable();
        var userRole = [];
        var userRoleName = [];
        var str="";
        employeeDataSet.clear();
        //Load userRole by emp ID
        for (var i in _employeeJSONObjs) {
            userRole.push(getUserRoleByEmployeeId(_employeeJSONObjs[i].Id));
        }
        //construct userRoleName
        for (var i in userRole) {
            if (userRole[i] != null) {
                for (var j in userRole[i]) {
                    str = userRole[i][j].UserRoleName+","+str;
                }
                userRoleName.push(str);
                str="";
            }
            else userRoleName.push("");
        }
        //construct table
        for (var i in _employeeJSONObjs) {
             employeeDataSet.row.add([
                parseInt(i) + 1,
                _employeeJSONObjs[i].EmployeeNumber,
                _employeeJSONObjs[i].FirstName,
                _employeeJSONObjs[i].LastName,
                _employeeJSONObjs[i].Email,
                (_employeeJSONObjs[i].AdminFlag ? '<i class="zmdi zmdi-circle text-success"></i> <span class="name"> Admin </span>' : ''),
                userRoleName[i]
            ]).draw(false);
        }
        employeeDataSet.columns.adjust().draw();
    }

    function getUserRoleByEmployeeId(Id){
        var endPoint = "/Setup/ReqAction?action=getUserRoleByEmployeeId";
        var result;
        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "GET",
            url: endPoint + "&t=" + Date.now(),
            async: false,
            success: function (data) {
                if (data != "[]") {
                    JSONdata = JSON.parse(data);
                    console.log(Id, data);
                    result= JSONdata;
                }
                else result=[];
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });

        return result;
    }
    function LoadUserRoleObjects() {
        for (var key in _userRoleJSONObjs) {
            $("#selectAvailable").append("<option value='" + _userRoleJSONObjs[key].Id + "'>" + _userRoleJSONObjs[key].Name + "</option>");
        }
    }

    function CleanFormInput() {
        $("#eEmail").val('');
        $('#eFirstName').val('');
        $('#eEmployeeNumber').val('');
        $('#eLastName').val('');
        $('#eAdmin').prop('checked', false);
        $('#ePassword').val('');
        $('#eConfirmPassword').val('');
        $('#ePhotoURL').attr("src", '/assets/images/default/employee-128.png');
        $("#selectAvailable").empty();
        $("#selectGrant").empty();
        $("#eNewPassword").val('');
        $("#eConfirmNewPassword").val('');
        LoadUserRoleObjects();
    }

    function RefreshEmployeeTable() {
        $.ajax({
            type: "POST",
            url: "/Setup/ReqAction?action=getemployee" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _employeeJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadEmployeeListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function OnSelectEmployeeItem(employeeId) {
        $('#panel_detail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        document.getElementById('eEmail').disabled = true;
        _selectedEmployeeId = employeeId;
        var userRole = [];
        var userRoleId = [];
        CleanFormInput();
        for (var i in _employeeJSONObjs) {
            if (_employeeJSONObjs[i].Id == _selectedEmployeeId) {
                $('#eEmail').val(_employeeJSONObjs[i].Email);
                $('#eEmployeeNumber').val(_employeeJSONObjs[i].EmployeeNumber);
                $('#eFirstName').val(_employeeJSONObjs[i].FirstName);
                $('#eLastName').val(_employeeJSONObjs[i].LastName);
                if (_employeeJSONObjs[i].AdminFlag)  $('#eAdmin').prop('checked', true);
                else $('#eAdmin').prop('checked', false);
                if (_employeeJSONObjs[i].PhotoURL != null && _employeeJSONObjs[i].PhotoURL.length > 0)
                    $('#ePhotoURL').attr("src", _employeeJSONObjs[i].PhotoURL);
                else
                    $('#ePhotoURL').attr("src", '/assets/images/default/employee-128.png');
                //get UserRole and select userRole
                userRole = getUserRoleByEmployeeId(_employeeJSONObjs[i].Id);
                if (userRole != null) {
                    for (var i in userRole) {
                        $("#selectGrant").append("<option value='" + userRole[i].UserRoleId + "'>" + getUserRoleNameById(userRole[i].UserRoleId) + "</option>");
                        $(eval("\"#selectAvailable option[value='" + userRole[i].UserRoleId + "']\"")).remove();
                    }
                }
                break;
            }
        }
    }

    function getUserRoleNameById(RoleId)
    {
        for (var key in _userRoleJSONObjs) {
            if (_userRoleJSONObjs[key].Id == RoleId)
            {
                return _userRoleJSONObjs[key].Name;
            }
        }
    }

    function DoEmployeeTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Setup/ReqAction?action=" + actionName;
        if (postData != null) postData.append('CompanyId', companyId);

        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshEmployeeTable();
                _selectedEmployeeId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }


    TableManageButtons.init();

    LoadEmployeeListIntoTable();

    LoadUserRoleObjects()

    $(document).ready(function () {
        $("#selectAvailable").change(function () {
            var text = $("#selectAvailable").find("option:selected").text();
            var value = $("#selectAvailable").val();
            $("#selectGrant").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectAvailable").find("option:selected").remove();
        });

        $("#selectGrant").change(function () {
            var text = $("#selectGrant").find("option:selected").text();
            var value = $("#selectGrant").val();
            $("#selectAvailable").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectGrant").find("option:selected").remove();
        });

        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #EmployeeList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectEmployeeItem(_employeeJSONObjs[table.row(this).index()].Id);
            SwitchToEditMode();
        });

        function dataValidation(postData) {

            postData.append('UploadFile', $('#eLogoFileInput')[0].files[0]);

            if ($("#eEmail").val().length != 0) {
                postData.append('Email', $("#eEmail").val());
            } else {
                $("#eEmail").focus();
                swal("[[[Invalid]]] !", "[[[Email]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eEmployeeNumber").val().length != 0) {
                postData.append('EmployeeNumber', $("#eEmployeeNumber").val());
            }
            if ($("#eFirstName").val().length != 0) {
                postData.append('FirstName', $("#eFirstName").val());
            }
            if ($("#eLastName").val().length != 0) {
                postData.append('LastName', $("#eLastName").val());
            }
            postData.append('AdminFlag', $("#eAdmin").is(":checked") ? true : false);

            if ($('#passwordForm').css('display') != 'none') {
                if (($("#ePassword").val() == $("#eConfirmPassword").val()) && ($("#ePassword").val().length != 0)) {
                    postData.append('Password', $("#ePassword").val());
                } else {
                    $("#ePassword").focus();
                    $("#eConfirmPassword").val('');
                    swal("[[[Invalid]]] !", "[[[Please Confirm Password]]]!");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
            }

            var grantRole = document.getElementById('selectGrant').options;
            for (var i = 0; i < grantRole.length; i++) {
                postData.append('UserRoleId', grantRole[i].value);
            }

            postData.append('Lang', 'en');

            return {

                postData: postData,
                isValidated: true
            }
        }
        function SwitchToEditMode()
        {
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#ResetPasswordButton').css("display", "inline");
            $('#DeleteEmployeeButton').css("display", "inline");
            $('#UpdateEmployeeButton').css("display", "inline");
            $('#AddNewEmployeeButton').css("display", "inline");
            $('#CancelAddNewEmployeeButton').css("display", "none");
            $('#SubmitNewEmployeeButton').css("display", "none");

            $('#collapseDetail').css("display", "inline");

            $('#collapseChangePassword').css("display", "none");
            $('#CancelResetPasswordButton').css("display", "none");
            $('#SubmitResetPasswordButton').css("display", "none");
            $('#passwordForm').css("display", "none");
        }


        $('#AddNewEmployeeButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[New]]] [[[Employee]]]");
            $('#ResetPasswordButton').css("display", "none");
            $('#DeleteEmployeeButton').css("display", "none");
            $('#UpdateEmployeeButton').css("display", "none");
            $('#collapseChangePassword').css("display", "none");
            $('#CancelResetPasswordButton').css("display", "none");
            $('#SubmitResetPasswordButton').css("display", "none");

            $('#CancelAddNewEmployeeButton').css("display", "inline");
            $('#SubmitNewEmployeeButton').css("display", "inline");

            $('#AddNewEmployeeButton').css("display", "none");
            $('#passwordForm').css("display", "inline");
            CleanFormInput();
            document.getElementById('eEmail').disabled = false;
            $("#eEmail").focus();
        });

        $('#CancelAddNewEmployeeButton').click(function () {
            SwitchToEditMode();
            CleanFormInput();
            $('#panel_detail').css("display", "none");
            window.scrollTo(0, 0);
        });

        $("#ResetPasswordButton").click(function () {
            $('#panel_detail').css("display", "block");
            $('#EditingPanelTitle').html("[[[Reset Password]]]");
            $('#ResetPasswordButton').css("display", "none");
            $('#DeleteEmployeeButton').css("display", "none");
            $('#UpdateEmployeeButton').css("display", "none");
            $('#AddNewEmployeeButton').css("display", "none");
            $('#CancelAddNewEmployeeButton').css("display", "none");
            $('#SubmitNewEmployeeButton').css("display", "none");

            $('#collapseDetail').css("display", "none");

            $('#collapseChangePassword').css("display", "inline");
            $('#CancelResetPasswordButton').css("display", "inline");
            $('#SubmitResetPasswordButton').css("display", "inline");

        });

        $("#CancelResetPasswordButton").click(function () {
            SwitchToEditMode();
            $('#panel_detail').css("display", "none");
        });

        $("#SubmitResetPasswordButton").click(function () {
            if (_selectedEmployeeId < 0)
            {
                toastr["error"]("[[[No Employee Select]]].");
                return;
            }

            var postData = new FormData();
            if (($("#eNewPassword").val() == $("#eConfirmNewPassword").val()) && ($("#eNewPassword").val().length != 0)) {
                postData.append('NewPassword', $("#eNewPassword").val());
            } else {
                $("#eNewPassword").focus();
                $("#eConfirmNewPassword").val('');
                swal("[[[Invalid]]] !", "[[[Please Confirm Password]]]!");
                return;
            }

            swal({
                title: "[[[Are you sure]]]?",
                text: "",
                type: "success",
                showCancelButton: true,
                confirmButtonClass: 'btn-success waves-effect waves-light',
                confirmButtonText: '[[[Submit]]]!'
            }, function (isConfirm) {
                if (isConfirm) {
                    DoEmployeeTransactionAjax("resetpassword", _selectedEmployeeId, postData);
                    SwitchToEditMode();
                    CleanFormInput();
                    $('#panel_detail').css("display", "none");
                    window.scrollTo(0, 0);
                }
            });

        });

        $('#SubmitNewEmployeeButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoEmployeeTransactionAjax("addemployee", -1, result.postData);
                        SwitchToEditMode();
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteEmployeeButton').click(function () {
            if (_selectedEmployeeId < 0)
                toastr["error"]("[[[No Employee Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoEmployeeTransactionAjax("deleteemployee", _selectedEmployeeId, null);
                        CleanFormInput();
                        window.scrollTo(0, 0);
                        SwitchToEditMode();
                        $('#panel_detail').css("display", "none");
                    }
                });
            }
        });

        $('#UpdateEmployeeButton').click(function () {
            if (_selectedEmployeeId < 0)
                toastr["error"]("[[[No Employee Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            console.log("isconfirmed")
                            DoEmployeeTransactionAjax("updateemployee", _selectedEmployeeId, result.postData);
                            CleanFormInput();
                            SwitchToEditMode();
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
    });
</script>