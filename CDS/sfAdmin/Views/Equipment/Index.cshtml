
@{
    ViewBag.Title = "Equipment";
}
<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Equipment]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewEquipmentButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Equipment]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="equipmentListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Equip ID]]]</th>
                        <th>[[[Equipment]]]</th>
                        <th>[[[Equipment Classification]]]</th>
                        <th>[[[IoT Device ID]]]</th>
                        <th>[[[IoT Device Type]]]</th>
                        <th>[[[Factory]]]</th>
                    </tr>
                </thead>
                <tbody id="EquipmentList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Detail]]]</h4>
                </div>
                <div style="float:right">
                    <button id="DeleteEquipmentButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateEquipmentButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewEquipmentButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewEquipmentButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                    </div>
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                            <img id="ePhotoURL" src="~/assets/images/default/equipment-128.png" class="img-responsive" alt="Logo" style="max-width: 200px; height: inherit; padding-bottom: 15px;">
                            <div class="row" style="width: 200px;">
                                <input id="eLogoFileInput" type="file" class="form-control">
                            </div>
                        </div>
                        <div class="col-sm-10">
                            <form id="employee-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="eName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="eEquipId" class="col-sm-3 control-label">
                                            [[[Equip]]] ID(*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eEquipId" type="text" class="form-control" placeholder="[[[Equipment]]] ID" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="eClassification" class="col-sm-3 control-label">[[[Classification]]](*)</label>
                                        <div class="col-sm-9">
                                            <select id="eClassification" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="eIoTDevice" class="col-sm-3 control-label">[[[IoTDevice]]](*)</label>
                                        <div class="col-sm-9">
                                            <select id="eIoTDevice" class="form-control" required></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="eFactory" class="col-sm-3 control-label">
                                            [[[Factory]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eFactory" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLatitude" class="col-sm-3 control-label">[[[Latitude]]]</label>
                                        <div class="col-sm-9">
                                            <input id="cLatitude" type="number" step=any min=0 placeholder="[[[Empty: Same with Factory]]]" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cLongitude" class="col-sm-3 control-label">[[[Longitude]]]</label>
                                        <div class="col-sm-9">
                                            <input id="cLongitude" type="number" step=any min=0 placeholder="[[[Empty: Same with Factory]]]" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="cMaxIdleInSec" class="col-sm-3 control-label">[[[Max Idle Time (second)]]]</label>
                                        <div class="col-sm-9">
                                            <input id="cMaxIdleInSec" type="number" step=any min=0 placeholder="Default: 30" class="form-control">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
<!-- Meta Data Begin -->
<div class="row" id="panel_metadata" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">                
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Meta Data]]]</h4>
                </div>               
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">                        
                        <table id="metadataTable">                            
                        </table>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
<script type="text/javascript">
    var _equipmentJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.EquipmentList'));
    var _equipmentClassJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.EquipmentClassList'));
    var _equipmentMetaDataJSONObjs;
    var _factoryJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.FactoryList'));
    var _iotDeviceJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.IoTDeviceList'));
    var _selectedEquipmentId = -1;

    var _permissions = [@ViewBag.PermissionList];
    var equipmentDataSet = $('#datatable-responsive').DataTable(
            {
                dom: 'l<"toolbar">frtip',
                initComplete: function () {
                    $("div.toolbar")
                       .html(' <div><div class="col-sm-4" >[[[Show Factory]]]:  <select id="factoryFilter" class="form-control" onChange=search(this) >' +
                       getFactoryFilterOptionsHTML() +
                       '<select>' +
                       '</div>');
                    $("div.dataTables_length").css("margin-left", "10px");
                }
    });
    function getFactoryFilterOptionsHTML() {
        var options = "<option value=all>ALL</option>";
        for (var i in _factoryJSONObjs) {
            options = options + "<option value= " + _factoryJSONObjs[i].Id + ">" + _factoryJSONObjs[i].Name + "</option>";
        }
        return options;

    }
    function LoadEquipmentListIntoTable() {
        equipmentDataSet.clear().draw(false);
        //construct table
        for (var i in _equipmentJSONObjs) {
            equipmentDataSet.row.add([
                parseInt(i) + 1,
                _equipmentJSONObjs[i].EquipmentId,
                _equipmentJSONObjs[i].Name,
                _equipmentJSONObjs[i].EquipmentClassName,
                _equipmentJSONObjs[i].IoTHubDeviceId,
                _equipmentJSONObjs[i].IoTDeviceTypeName,
                _equipmentJSONObjs[i].FactoryName
            ]).draw(false);
        }
        equipmentDataSet.columns.adjust().draw();
    }
    function search(factoryId) {

        var factory = "&factoryId=" + factoryId.value;

        $.ajax({
            type: "POST",
            url: "/Equipment/ReqAction?action=getEquipByFactory" + "&t=" + Date.now() + factory,
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                console.log("data"+data);
                _equipmentJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadEquipmentListIntoTable();
                $("#panel_detail").css("display", "none");
                $("#panel_metadata").css("display", "none");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }
    function CleanFormInput() {
        $("#eName").val('');
        $('#eEquipId').val('');
        $('#eClassification').val('');
        $('#eIoTDevice').val('');
        $('#eFactory').val('');
        $('#cLatitude').val('');
        $("#cLongitude").val('');
        $("#eLogoFileInput").val('');
        $("#cMaxIdleInSec").val('');
        $('#ePhotoURL').attr("src", '/assets/images/default/equipment-128.png');
    }

    function CleanMetaData()
    {
        var metadataTable = document.getElementById('metadataTable');
        while (metadataTable.firstChild) {
            metadataTable.removeChild(metadataTable.firstChild);
        }
    }

    function loadClassification() {
        var options = "<option disabled selected value> -- [[[select an Classification]]] -- </option>";
        for (var i in _equipmentClassJSONObjs) {
            options += "<option value=" + _equipmentClassJSONObjs[i].Id + ">" + _equipmentClassJSONObjs[i].Name + "</option>"
        }
        document.getElementById("eClassification").innerHTML = options;
    }
    function loadIoTDevice() {
        var options = "<option disabled selected value> -- [[[select an IoT Hub Device]]] -- </option>";
        for (var i in _iotDeviceJSONObjs) {
            options += "<option value=" + _iotDeviceJSONObjs[i].IoTHubDeviceId + ">" + _iotDeviceJSONObjs[i].IoTHubDeviceId + "</option>"
        }
        document.getElementById("eIoTDevice").innerHTML = options;
    }
    function loadFactory() {
        var options = "<option disabled selected value> -- [[[select an Factory]]] -- </option>";
        for (var i in _factoryJSONObjs) {
            options += "<option value=" + _factoryJSONObjs[i].Id + ">" + _factoryJSONObjs[i].Name + "</option>"
        }
        document.getElementById("eFactory").innerHTML = options;

    }
    function RefreshEquipmentTable() {
        $.ajax({
            type: "POST",
            url: "/Equipment/ReqAction?action=getequipment" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _equipmentJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadEquipmentListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("Session Expired. Please Re-Login.");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }

    function OnSelectEquipmentItem(equipmentId) {
        $('#panel_detail').css("display", "block");
        $('#panel_metadata').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        document.getElementById('eName').disabled = true;
        _selectedEquipmentId = equipmentId;
        CleanFormInput();
        CleanMetaData();
        DoRetrieveEquipmentMetaData(_selectedEquipmentId);
        for (var i in _equipmentJSONObjs) {
            if (_equipmentJSONObjs[i].Id == _selectedEquipmentId) {
                $('#eName').val(_equipmentJSONObjs[i].Name);
                $('#eEquipId').val(_equipmentJSONObjs[i].EquipmentId);
                $('#eClassification').val(_equipmentJSONObjs[i].EquipmentClassId);
                $('#eIoTDevice').val(_equipmentJSONObjs[i].IoTHubDeviceId);
                $('#cLatitude').val(_equipmentJSONObjs[i].Latitude);
                $('#cLongitude').val(_equipmentJSONObjs[i].Longitude);
                $('#cMaxIdleInSec').val(_equipmentJSONObjs[i].MaxIdleInSec);
                $('#eFactory').val(_equipmentJSONObjs[i].FactoryId);
                if (_equipmentJSONObjs[i].PhotoUrl != null && _equipmentJSONObjs[i].PhotoUrl.length > 0) {
                    $('#ePhotoURL').attr("src", '/assets/images/default/equipment-128.png');
                    $('#ePhotoURL').attr("src", _equipmentJSONObjs[i].PhotoUrl);
                }
                else
                    $('#ePhotoURL').attr("src", '/assets/images/default/equipment-128.png');

                break;
            }
        }
    }

    function DoRetrieveEquipmentMetaData(equipmentId)
    {
        var endPoint = "/Equipment/ReqAction?action=getmetadata&Id=" + equipmentId;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _equipmentMetaDataJSONObjs = $.parseJSON(jsonStringFilter(data));
                var metadataTable = document.getElementById('metadataTable');                 
                for (var i in _equipmentMetaDataJSONObjs) {
                    var tr = document.createElement('tr'); 
                    var td1 = document.createElement('td');
                    td1.width = 180;
                    var text1 = document.createTextNode(_equipmentMetaDataJSONObjs[i].ObjectName);
                    td1.appendChild(text1);
                    var td2 = document.createElement('td');
                    td2.width = 480;
                    var input2 = document.createElement("input");
                    input2.type = "text";
                    input2.name = "metaDatas[" + i + "].ObjectValue";
                    input2.id = "metaDatas[" + i + "].ObjectValue";
                    input2.size = '20';
                    input2.maxLength = '20';

                    if (_equipmentMetaDataJSONObjs[i].Id != 0)
                    {
                        input2.value = _equipmentMetaDataJSONObjs[i].ObjectValue;
                    }
                    td2.appendChild(input2);
                    tr.appendChild(td1);
                    tr.appendChild(td2);
                    metadataTable.appendChild(tr);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function DoEquipmentTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Equipment/ReqAction?action=" + actionName;

        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshEquipmentTable();
                _selectedEquipmentId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }
    function checkPermission() {
        var piority = -1;
        for (var i in _permissions) {
            if (_permissions[i] == 0) {  //Admin
                piority = 2;
                break;
            }
            if (_permissions[i] == 20) {  //Equipment View
                piority = 1;
            }
            if (_permissions[i] == 21) {  //Equipment Edit
                piority = 2;
                break;
            }
        }
        if (piority == 1) {  //only View
            $('#DeleteEquipmentButton').css("display", "none");
            $('#UpdateEquipmentButton').css("display", "none");
            $('#SubmitNewEquipmentButton').css("display", "none");
            $('#AddNewEquipmentButton').css("display", "none");
        }
    }


    TableManageButtons.init();
    checkPermission();
    LoadEquipmentListIntoTable();
    loadClassification();
    loadIoTDevice();
    loadFactory();

    $(document).ready(function () {

        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #EquipmentList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectEquipmentItem(_equipmentJSONObjs[table.row(this).index()].Id);
            SwitchToViewMode();
        });

        function dataValidation(postData) {

            postData.append('UploadFile', $('#eLogoFileInput')[0].files[0]);
            if ($("#eName").val().length != 0) {
                postData.append('Name', $("#eName").val());
            } else {
                $("#eName").focus();
                swal("[[[Invalid]]] !", "[[[Name is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eEquipId").val()) {
                postData.append('EquipmentId', $("#eEquipId").val());
            } else {
                $("#eEquipId").focus();
                swal("[[[Invalid]]] !", "[[[Equip ID is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eClassification").val()) {
                postData.append('EquipmentClassId', $("#eClassification").val());
            } else {
                $("#eClassification").focus();
                swal("[[[Invalid]]] !", "[[[Classification is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eFactory").val()) {
                postData.append('FactoryId', $("#eFactory").val());
            } else {
                $("#eFactory").focus();
                swal("[[[Invalid]]] !", "[[[Factory is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eIoTDevice").val()) {
                postData.append('IoTHubDeviceId', $("#eIoTDevice").val());
            } else {
                $("#eIoTDevice").focus();
                swal("[[[Invalid]]] !", "[[[IoTDevice is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            if ($("#cLatitude").val().length != 0 && $("#cLongitude").val().length != 0)
            {   // User Input Location
                if ($("#cLatitude").val() == 0 && $("#cLongitude").val() == 0) {
                    $("#cLatitude").focus();
                    swal("[[[Invalid]]] !", "[[[Location is invalid]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
                else
                {
                    if (isNaN($("#cLatitude").val())) {
                        $("#cLatitude").focus();
                        swal("[[[Invalid]]] !", "[[[Latitude]]] [[[must be a number]]].");
                        return {
                            postData: postData,
                            isValidated: false
                        };
                    } else {
                        postData.append('Latitude', eval($("#cLatitude").val()));
                    }

                    if (isNaN($("#cLongitude").val())) {
                        $("#cLongitude").focus();
                        swal("[[[Invalid]]] !", "[[[Longitude]]] [[[must be a number]]].");
                        return {
                            postData: postData,
                            isValidated: false
                        };
                    } else {
                        postData.append('Longitude', eval($("#cLongitude").val()));
                    }
                }
            }
            else
            {   // Get Location from Factory
                postData.append('Location', 'Factory');
            }

            if ($("#cMaxIdleInSec").val().length != 0)
            {
                if (isNaN($("#cMaxIdleInSec").val())) {
                    $("#cMaxIdleInSec").focus();
                    swal("[[[Invalid]]] !", "[[[Max Idel Time]]] [[[must be a number]]].");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                } else {
                    postData.append('MaxIdleInSec', eval($("#cMaxIdleInSec").val()));
                }
            }
            else
            {
                postData.append('MaxIdleInSec', '30');
            }

            //Get Meta-Data Input
            for (var i in _equipmentMetaDataJSONObjs) {
                postData.append('metaDatas[' + i + '].Id', _equipmentMetaDataJSONObjs[i].Id);
                postData.append('metaDatas[' + i + '].MetaDataDefinationId', _equipmentMetaDataJSONObjs[i].MetaDataDefinationId);
                postData.append('metaDatas[' + i + '].ObjectValue', document.getElementById("metaDatas[" + i + "].ObjectValue").value);
            }

            return {
                postData: postData,
                isValidated: true
            }
        }
        function SwitchToViewMode() {
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteEquipmentButton').css("display", "inline");
            $('#UpdateEquipmentButton').css("display", "inline");
            $('#AddNewEquipmentButton').css("display", "inline");
            $('#CancelAddNewEquipmentButton').css("display", "none");
            $('#SubmitNewEquipmentButton').css("display", "none");

            $('#collapseDetail').css("display", "inline");
            checkPermission();
        }


        $('#AddNewEquipmentButton').click(function () {
            $('#panel_detail').css("display", "block");
            $('#panel_metadata').css("display", "none");

            $('#EditingPanelTitle').html("[[[New]]] [[[Equipment]]]");
            $('#DeleteEquipmentButton').css("display", "none");
            $('#UpdateEquipmentButton').css("display", "none");

            $('#CancelAddNewEquipmentButton').css("display", "inline");
            $('#SubmitNewEquipmentButton').css("display", "inline");

            $('#AddNewEquipmentButton').css("display", "none");
            CleanFormInput();            
            document.getElementById('eName').disabled = false;
            $("#eName").focus();
        });

        $('#CancelAddNewEquipmentButton').click(function () {
            SwitchToViewMode();
            CleanFormInput();
            CleanMetaData();
            $('#panel_detail').css("display", "none");
            $('#panel_metadata').css("display", "none");
            window.scrollTo(0, 0);
        });

        $('#SubmitNewEquipmentButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoEquipmentTransactionAjax("addequipment", -1, result.postData);
                        SwitchToViewMode();
                        CleanFormInput();
                        CleanMetaData();
                        $('#panel_detail').css("display", "none");
                        $('#panel_metadata').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteEquipmentButton').click(function () {
            if (_selectedEquipmentId < 0)
                toastr["error"]("[[[No Equipment Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoEquipmentTransactionAjax("deleteequipment", _selectedEquipmentId, null);
                        CleanFormInput();
                        CleanMetaData();
                        window.scrollTo(0, 0);
                        SwitchToViewMode();
                        $('#panel_detail').css("display", "none");
                        $('#panel_metadata').css("display", "none");
                    }
                });
            }
        });

        $('#UpdateEquipmentButton').click(function () {
            if (_selectedEquipmentId < 0)
                toastr["error"]("[[[No Employee Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            console.log("isconfirmed")
                            DoEquipmentTransactionAjax("updateequipment", _selectedEquipmentId, result.postData);
                            CleanFormInput();
                            CleanMetaData();
                            SwitchToViewMode();
                            $('#panel_detail').css("display", "none");
                            $('#panel_metadata').css("display", "none");
                        }
                    });
                }
            }
        });
    });
</script>