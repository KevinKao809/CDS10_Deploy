@{
    ViewBag.Title = "IoTDevice  / IoTDevices";
}
<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[IoTDevice]]] / [[[IoTDevices]]] </h4>
        </div>
        <div style="float:right">
            <button id="AddNewIoTDeviceButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[IoTDevice]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="employeeListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[IoT Deivce]]] ID</th>
                        <th>[[[IoTHub Alias]]]</th>
                        <th>[[[Protocol]]]</th>
                        <th>[[[Factory]]]</th>
                        <th>[[[Authentication]]]</th>
                        <th>[[[Type]]]</th>
                    </tr>
                </thead>
                <tbody id="IoTDeviceList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">[[[Detail]]]</h4>
                </div>
                <div style="float:right">
                    <button id="ResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:155px;"> <i class="ti-ruler-pencil m-r-5"></i> <span>[[[Reset Password]]]</span> </button>
                    <button id="DeleteIoTDeviceButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateIoTDeviceButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancleAddNewIoTDeviceButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewIoTDeviceButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                    <button id="CancleResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitResetPasswordButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>
            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                            <img id="ePhotoURL" src="/assets/images/default/DeviceClass.png" class="img-responsive" alt="Logo" style="max-width: 200px; height: inherit; padding-bottom: 15px;">                           
                        </div>
                        <div class="col-sm-10">
                            <form id="employee-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="inputIoTHubDeviceId" class="col-sm-3 control-label">
                                            [[[IoT Device]]] ID(*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eIoTHubDeviceId" type="text" class="form-control" placeholder="[[[Device]]] ID" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputEmployeeNumber" class="col-sm-3 control-label">
                                            [[[IoT Hub Alias]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eIoTHubAlias" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputFirstName" class="col-sm-3 control-label">
                                            [[[Protocol]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eProtocol" class="form-control" required>
                                                <option value="MQTT">MQTT</option>
                                                <option value="AMQP">AMQP</option>
                                                <option value="HTTPS">HTTPS</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Factory]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eFactoryName" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Authentication]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eAuthenticationType" class="form-control" required>
                                                <option value="Key">Key</option>
                                                <option value="Certificate">Certificate</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Certification]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eDeviceCertificateName" class="form-control"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Type]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <select id="eDeviceTypeName" class="form-control" required></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Vendor]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eDeviceVendor" type="text" class="form-control" placeholder="" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputLastName" class="col-sm-3 control-label">
                                            [[[Model]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eDeviceModel" type="text" class="form-control" placeholder="" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6" id="passwordForm" style="display:none">
                                    <div class="form-group">
                                        <label for="inputPassword" class="col-sm-3 control-label">
                                            [[[Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="ePassword" type="password" class="form-control" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputConfirmPassword" class="col-sm-3 control-label">
                                            [[[Confirm Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eConfirmPassword" type="password" class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
            <!--Reset Password Div-->
            <div id="collapseResetPassword" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                        </div>
                        <div class="col-sm-10">
                            <form id="employee-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="NewPassword" class="col-sm-3 control-label">
                                            [[[New Password]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="eNewPassword" type="password" class="form-control" placeholder="[[[New Password]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="ConfirmNewPassword" class="col-sm-3 control-label">[[[Confirm New Password]]] (*)</label>
                                        <div class="col-sm-9">
                                            <input id="eConfirmNewPassword" type="password" class="form-control" placeholder="[[[Confirm New Password]]]" required>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
            <!-- End of Reset Password-->
        </div>
    </div>
</div>
<!-- end row -->
<script type="text/javascript">
    var _iotDeviceJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.IoTDeviceList'));
    var _factoryJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.FactoryList'));
    var _iotHubJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.IoTHubList'));

    var _permissions = [@ViewBag.PermissionList];


    var _selectedIoTDeviceId = -1;
    if (_iotDeviceJSONObjs[0] != null) {
        var iotDevcieId = _iotDeviceJSONObjs[0].IoTHubDeviceId;
    }
    var ioTDeviceDataSet = $('#datatable-responsive').DataTable({
        dom: 'l<"toolbar">frtip',
        initComplete: function () {
            $("div.toolbar")
               .html(' <div><div class="col-sm-4" >[[[Show Factory]]]:  <select id="factoryFilter" class="form-control" onChange=search(this)>' +
               getFactoryFilterOptionsHTML() +
               '<select>' +
               '</div>');
            $("div.dataTables_length").css("margin-left", "10px");
        }
    });
    function getFactoryFilterOptionsHTML() {
        var options = "<option value=all>ALL</option>";
        for (var i in _factoryJSONObjs) {
            options = options + "<option value= " + _factoryJSONObjs[i].Id + ">" + _factoryJSONObjs[i].Name + "</option>";
        }
        return options;

    }
    function search(factoryId) {
        var factory = "&factoryId=" + factoryId.value;
        $.ajax({
            type: "POST",
            url: "/IoTDevice/ReqAction?action=getIoTDeviceByFactory" + "&t=" + Date.now() + factory,
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _iotDeviceJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadIoTDeviceListIntoTable();
                $("#panel_detail").css("display", "none");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("Session Expired. Please Re-Login.");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }
    function LoadIoTDeviceListIntoTable() {

        ioTDeviceDataSet.clear().draw(false);
        for (var i in _iotDeviceJSONObjs) {
            ioTDeviceDataSet.row.add([
                parseInt(i) + 1,
                _iotDeviceJSONObjs[i].IoTHubDeviceId,
                _iotDeviceJSONObjs[i].IoTHubAlias,
                _iotDeviceJSONObjs[i].IoTHubProtocol,
                _iotDeviceJSONObjs[i].FactoryName,
                _iotDeviceJSONObjs[i].AuthenticationType,
                _iotDeviceJSONObjs[i].DeviceTypeName
            ]).draw(false);
        }
        ioTDeviceDataSet.columns.adjust().draw();
    }

    function CleanFormInput() {
        $("#eIoTHubDeviceId").val('');
        $('#eIoTHubAlias').val('');
        $('#eProtocol').val('');
        $('#eFactoryName').val('');
        $('#eAuthenticationType').val('');
        $('#eDeviceCertificateName').val('');
        $('#eDeviceTypeName').val('');
        $('#eDeviceVendor').val('');
        $('#eDeviceModel').val('');

        $('#ePassword').val('');
        $("#eOldPassword").val('');
        $("#eNewPassword").val('');
        $("#eConfirmNewPassword").val('');
        $("#eConfirmPassword").val('');
    }
    function LoadIotHubAliasIntoSelect() {
        var options = "<option disabled selected value> -- [[[select an IoT Hub]]] -- </option>";
        for (var i in _iotHubJSONObjs) {
            options += "<option value=\"" + _iotHubJSONObjs[i].IoTHubAlias + "\">" + _iotHubJSONObjs[i].IoTHubAlias + "</option>"
        }
        document.getElementById("eIoTHubAlias").innerHTML = options;
    }
    function LoadFactoryIntoSelect() {
        var options = "<option disabled selected value> -- [[[select an Factory]]] -- </option>";

        for (var i in _factoryJSONObjs) {
            options += "<option value=" + _factoryJSONObjs[i].Id + ">" + _factoryJSONObjs[i].Name + "</option>";
        }
        document.getElementById("eFactoryName").innerHTML = options;
    }
    function LoadDeviceTypeIntoSelect() {
        var _deviceTypeJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.DeviceTypeList'));
        var options = "";
        for (var i in _deviceTypeJSONObjs) {
            options += "<option value=" + _deviceTypeJSONObjs[i].Id + ">" + _deviceTypeJSONObjs[i].Name + "</option>"
        }
        document.getElementById("eDeviceTypeName").innerHTML = options;
    }
    function LoadCertificateIntoSelect() {
        var _certificateJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.CertificateList'));
        var options = "";
        for (var i in _certificateJSONObjs) {
            options += "<option value=" + _certificateJSONObjs[i].Id + ">" + _certificateJSONObjs[i].Name + "</option>"
        }
        document.getElementById("eDeviceCertificateName").innerHTML = options;
    }

    function RefreshIoTDeviceTable() {
        $.ajax({
            type: "POST",
            url: "/IoTDevice/ReqAction?action=getiotdevice" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _iotDeviceJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadIoTDeviceListIntoTable();
                LoadIotHubAliasIntoSelect();
                LoadFactoryIntoSelect();
                LoadDeviceTypeIntoSelect();
                LoadCertificateIntoSelect();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }

    function OnSelectDeviceItem(iotDeviceId) {
        $('#panel_detail').css("display", "block");
        $('#collapseDetail').css("display", "block");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        document.getElementById('eIoTHubDeviceId').disabled = true;
        _selectedIoTDeviceId = iotDeviceId;
        CleanFormInput();
        for (var i in _iotDeviceJSONObjs) {
            if (_iotDeviceJSONObjs[i].IoTHubDeviceId == _selectedIoTDeviceId) {
                $('#eIoTHubDeviceId').val(_iotDeviceJSONObjs[i].IoTHubDeviceId);
                $('#eIoTHubAlias').val(_iotDeviceJSONObjs[i].IoTHubAlias);
                $('#eProtocol').val(_iotDeviceJSONObjs[i].IoTHubProtocol);
                $('#eFactoryName').val(_iotDeviceJSONObjs[i].FactoryId);
                $('#eAuthenticationType').val(_iotDeviceJSONObjs[i].AuthenticationType);
                $('#eDeviceCertificateName').val(_iotDeviceJSONObjs[i].DeviceCertificateId);
                $('#eDeviceTypeName').val(_iotDeviceJSONObjs[i].DeviceTypeId);
                $('#eDeviceVendor').val(_iotDeviceJSONObjs[i].DeviceVendor);
                $('#eDeviceModel').val(_iotDeviceJSONObjs[i].DeviceModel);
                if (_iotDeviceJSONObjs[i].AuthenticationType == 'Key')
                    document.getElementById('eDeviceCertificateName').disabled = true;
                else
                    document.getElementById('eDeviceCertificateName').disabled = false;
                break;
            }

        }
    }


    function DoIoTDeviceTransactionAjax(actionName, Id, postData) {
        var endPoint = "/IoTDevice/ReqAction?action=" + actionName;

        if (Id)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshIoTDeviceTable();
                _selectedIoTDeviceId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("[[[Error]]]");
            }
        });
    }
    function checkPermission() {
        var piority = -1;
        for (var i in _permissions) {
            if (_permissions[i] == 0) {  //Admin
                piority = 2;
                break;
            }
            if (_permissions[i] == 30) {  //IOT View
                piority = 1;
            }
            if (_permissions[i] == 31) {  //IOT Edit
                piority = 2;
                break;
            }
        }
        if (piority == 1) {  //only View
            $('#DeleteIoTDeviceButton').css("display", "none");
            $('#UpdateIoTDeviceButton').css("display", "none");
            $('#SubmitNewIoTDeviceButton').css("display", "none");
            $('#AddNewIoTDeviceButton').css("display", "none");
            $('#ResetPasswordButton').css("display", "none");
        }

    }


    TableManageButtons.init();
    checkPermission();
    LoadIoTDeviceListIntoTable();
    LoadIotHubAliasIntoSelect();
    LoadFactoryIntoSelect();
    LoadDeviceTypeIntoSelect();
    LoadCertificateIntoSelect();


    $(document).ready(function () {
        $("#selectAvailable").change(function () {
            var text = $("#selectAvailable").find("option:selected").text();
            var value = $("#selectAvailable").val();
            $("#selectGrant").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectAvailable").find("option:selected").remove();
        });

        $("#selectGrant").change(function () {
            var text = $("#selectGrant").find("option:selected").text();
            var value = $("#selectGrant").val();
            $("#selectAvailable").append("<option value='" + value + "'>" + text + "</option>");
            $("#selectGrant").find("option:selected").remove();
        });

        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #IoTDeviceList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectDeviceItem(_iotDeviceJSONObjs[table.row(this).index()].IoTHubDeviceId);
            SwitchToEditMode();
        });

        function dataValidation(postData) {
            var IoTHubDeviceExp = /^[A-Za-z\d\s]+$/;
            var IoTHubDeviceId = $("#eIoTHubDeviceId").val().replace(/\s/g, '');
            if (IoTHubDeviceId.length == 0) {
                $("#eIoTHubDeviceId").focus();
                swal("[[[Invalid]]] !", "[[[Device]]] ID [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if (IoTHubDeviceId.length > 30) {
                $("#eIoTHubDeviceId").focus();
                swal("[[[Invalid]]] !", "Device Id must shorter than 30 characters.");
                return {
                    postData: postData,
                    isValidated: false
                };
            };
            if (!IoTHubDeviceId.match(IoTHubDeviceExp)) {
                $("#eIoTHubDeviceId").focus();
                swal("[[[Invalid]]] !", "Device Id can contain only letters and numbers character.");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            postData.append('IoTHubDeviceId', IoTHubDeviceId);
            $("#eIoTHubDeviceId").val(IoTHubDeviceId);


            if ($("#eIoTHubAlias").val()) {
                postData.append('IoTHubAlias', $("#eIoTHubAlias").val());
            } else {
                $("#eIoTHubAlias").focus();
                swal("[[[Invalid]]] !", "[[[IoTHub]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eProtocol").val()) {
                postData.append('IoTHubProtocol', $("#eProtocol").val());
            } else {
                $("#eProtocol").focus();
                swal("[[[Invalid]]] !", "[[[Protocol]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eFactoryName").val()) {
                postData.append('FactoryId', $("#eFactoryName").val());
            } else {
                $("#eFactoryName").focus();
                swal("[[[Invalid]]] !", "[[[Factory]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eAuthenticationType").val()) {
                postData.append('AuthenticationType', $("#eAuthenticationType").val());
                if ($("#eAuthenticationType").val() == "Certificate")
                {
                    if ($("#eDeviceCertificateName").val() == null)
                    {
                        $("#eDeviceCertificateName").focus();
                        swal("[[[Invalid]]] !", "[[[Device Certificate]]] [[[is necessary]]].");
                        return {
                            postData: postData,
                            isValidated: false
                        };
                    }
                }
            } else {
                $("#eAuthenticationType").focus();
                swal("[[[Invalid]]] !", "[[[Authentication]]] [[[Type]]] [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eDeviceCertificateName").val()) {
                postData.append('DeviceCertificateId', $("#eDeviceCertificateName").val());
            }
            if ($("#eDeviceTypeName").val()) {
                postData.append('DeviceTypeId', $("#eDeviceTypeName").val());
            } else {
                $("#eDeviceTypeName").focus();
                swal("[[[Invalid]]] !", "[[[Device Type]]] ID [[[is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }
            if ($("#eDeviceVendor").val().length != 0) {
                postData.append('DeviceVendor', $("#eDeviceVendor").val());
            }
            if ($("#eDeviceModel").val().length != 0) {
                postData.append('DeviceModel', $("#eDeviceModel").val());
            }

            if ($('#passwordForm').css('display') != 'none') {
                if (($("#ePassword").val() == $("#eConfirmPassword").val()) && ($("#ePassword").val().length != 0)) {
                    postData.append('IoTHubDevicePW', $("#ePassword").val());
                } else {
                    $("#ePassword").focus();
                    $("#eConfirmPassword").val('');
                    swal("[[[Invalid]]] !", "[[[Please Confirm Password]]]!");
                    return {
                        postData: postData,
                        isValidated: false
                    };
                }
            }

            return {

                postData: postData,
                isValidated: true
            }
        }
        function SwitchToEditMode() {
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#ResetPasswordButton').css("display", "inline");
            $('#DeleteIoTDeviceButton').css("display", "inline");
            $('#UpdateIoTDeviceButton').css("display", "inline");
            $('#AddNewIoTDeviceButton').css("display", "inline");
            $('#CancleAddNewIoTDeviceButton').css("display", "none");
            $('#SubmitNewIoTDeviceButton').css("display", "none");

            $('#panel_detail').css("display", "block");

            $('#collapseResetPassword').css("display", "none");
            $('#CancleResetPasswordButton').css("display", "none");
            $('#SubmitResetPasswordButton').css("display", "none");
            $('#passwordForm').css("display", "none");
            checkPermission();
        }


        $('#AddNewIoTDeviceButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[New]]] [[[IoT Device]]]");
            $('#ResetPasswordButton').css("display", "none");
            $('#DeleteIoTDeviceButton').css("display", "none");
            $('#UpdateIoTDeviceButton').css("display", "none");
            $('#collapseResetPassword').css("display", "none");
            $('#CancleResetPasswordButton').css("display", "none");
            $('#SubmitResetPasswordButton').css("display", "none");

            $('#CancleAddNewIoTDeviceButton').css("display", "inline");
            $('#SubmitNewIoTDeviceButton').css("display", "inline");

            $('#AddNewIoTDeviceButton').css("display", "none");
            $('#passwordForm').css("display", "inline");
            CleanFormInput();
            document.getElementById('eIoTHubDeviceId').disabled = false;
            $("#eIoTHubDeviceId").focus();
        });

        $('#CancleAddNewIoTDeviceButton').click(function () {
            SwitchToEditMode();
            CleanFormInput();
            $('#panel_detail').css("display", "none");
            window.scrollTo(0, 0);
        });

        $("#ResetPasswordButton").click(function () {
            $('#panel_detail').css("display", "block");
            $('#EditingPanelTitle').html("[[[Reset Password]]]");
            $('#ResetPasswordButton').css("display", "none");
            $('#DeleteIoTDeviceButton').css("display", "none");
            $('#UpdateIoTDeviceButton').css("display", "none");
            $('#AddNewIoTDeviceButton').css("display", "none");
            $('#CancleAddNewIoTDeviceButton').css("display", "none");
            $('#SubmitNewIoTDeviceButton').css("display", "none");

            $('#collapseDetail').css("display", "none");

            $('#collapseResetPassword').css("display", "inline");
            $('#CancleResetPasswordButton').css("display", "inline");
            $('#SubmitResetPasswordButton').css("display", "inline");

        });

        $("#CancleResetPasswordButton").click(function () {
            SwitchToEditMode();
            $('#panel_detail').css("display", "none");
        });

        $("#SubmitResetPasswordButton").click(function () {
            if (_selectedIoTDeviceId < 0) {
                toastr["error"]("[[[No IoT Device Select]]].");
                return;
            }

            var postData = new FormData();
            if (($("#eNewPassword").val() == $("#eConfirmNewPassword").val()) && ($("#eNewPassword").val().length != 0)) {
                postData.append('NewPassword', $("#eNewPassword").val());
            } else {
                $("#eNewPassword").focus();
                $("#eNewPassword").val('');
                $("#eConfirmNewPassword").val('');
                swal("[[[Invalid]]] !", "[[[Please Confirm Password]]]!");
                return;
            }

            swal({
                title: "[[[Are you sure]]]?",
                text: "",
                type: "success",
                showCancelButton: true,
                confirmButtonClass: 'btn-success waves-effect waves-light',
                confirmButtonText: '[[[Submit]]]!'
            }, function (isConfirm) {
                if (isConfirm) {
                    DoIoTDeviceTransactionAjax("[[[resetpassword]]]", _selectedIoTDeviceId, postData);
                    SwitchToEditMode();
                    CleanFormInput();
                    $('#panel_detail').css("display", "none");
                    window.scrollTo(0, 0);
                }
            });

        });


        $('#SubmitNewIoTDeviceButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);
            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoIoTDeviceTransactionAjax("addiotdevice", -1, result.postData);
                        SwitchToEditMode();
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteIoTDeviceButton').click(function () {
            if (_selectedIoTDeviceId < 0)
                toastr["error"]("[[[No IoT Device Select]]].");
            else {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: '[[[Delete]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoIoTDeviceTransactionAjax("deleteiotdevice", _selectedIoTDeviceId, null);
                        CleanFormInput();
                        window.scrollTo(0, 0);
                        SwitchToEditMode();
                        $('#panel_detail').css("display", "none");
                    }
                });
            }
        });

        $('#UpdateIoTDeviceButton').click(function () {
            if (_selectedIoTDeviceId < 0)
                toastr["error"]("[[[No IoT Device Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if (result.isValidated) {
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            console.log("isconfirmed")
                            DoIoTDeviceTransactionAjax("updateiotdevice", _selectedIoTDeviceId, result.postData);
                            CleanFormInput();
                            SwitchToEditMode();
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
        $('#eAuthenticationType').change(function () {
            var e = document.getElementById("eAuthenticationType");

            if (e.options[e.selectedIndex].value == 'Certificate') {
                document.getElementById('eDeviceCertificateName').disabled = false;
                LoadCertificateIntoSelect();
            } else {
                document.getElementById('eDeviceCertificateName').disabled = true;
                $('#eDeviceCertificateName').val('');
            }
        });
    });
</script>
