@{
    ViewBag.Title = "Message / Message Catalog";
}

<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Message]]] / [[[Message Catalog]]]</h4>
        </div>
        <div style="float:right">
            <button id="AddNewMessageCatalogButton" type="button" class="btn btn-inverse waves-effect waves-light m-b-5"> <i class="ti-plus m-r-5"></i> <span>[[[Add]]] [[[Message Catalog]]]</span> </button>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="messageCatalogListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Name]]]</th>
                        <th>[[[Description]]]</th>
                        <th>[[[Master Message]]]</th>
                    </tr>
                </thead>

                <tbody id="MessageCatalogList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->

<div class="row" id="panel_detail" style="display:none;">
    <div class="panel-group" id="accordion" 2 role="tablist" aria-multiselectable="true">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="headingDetail" style="height: 60px;">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseDetail" aria-expanded="true" aria-controls="collapseDetail">
                </a>
                <div style="float:left">
                    <h4 id="EditingPanelTitle" class="header-title m-t-0 m-b-30">Detail</h4>
                </div>
                <div style="float:right">
                    <button id="DeleteMessageCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-trash m-r-5"></i> <span>[[[Delete]]]</span> </button>
                    <button id="UpdateMessageCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px;"> <i class="ti-save m-r-5"></i> <span>[[[Save]]]</span> </button>
                    <button id="CancelAddNewMessageCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-close m-r-5"></i> <span>[[[Cancel]]]</span> </button>
                    <button id="SubmitNewMessageCatalogButton" class="btn btn-inverse waves-effect waves-light m-b-5" style="width:92px; display:none"> <i class="ti-location-arrow m-r-5"></i> <span>[[[Submit]]]</span> </button>
                </div>
            </div>

            <div id="collapseDetail" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingDetail">
                <div class="panel-body">
                    <div class="col-sm-3">
                    </div>
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm-2 text-left">
                            <img id="ePhotoURL" src="/assets/images/default/Message.png" class="img-responsive" alt="Logo" style="max-width: 200px; height: inherit; padding-bottom: 15px;">
                        </div>
                        <div class="col-sm-10">
                            <form id="messageCatalog-form" class="form-horizontal" role="form" data-toggle="validator">
                                <div class="col-sm-9">
                                    <div class="form-group">
                                        <label for="inputName" class="col-sm-3 control-label">
                                            [[[Name]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="cName" type="text" class="form-control" placeholder="[[[Name]]]" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputShortName" class="col-sm-3 control-label">
                                            [[[Description]]]
                                        </label>
                                        <div class="col-sm-9">
                                            <textarea id="cDescription" class="form-control" rows="5"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputName" class="col-sm-3 control-label">
                                            [[[Child Message]]](*)
                                        </label>
                                        <div class="col-sm-9">
                                            <input id="cChildMessageFlag" disabled="disabled" type="checkbox" checked data-plugin="switchery" data-color="#00b19d" data-size="small" />
                                        </div>
                                    </div>
                                </div>                                
                            </form>
                        </div>
                        <div class="col-sm-3">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->

<script type="text/javascript">
    var _messageCatalogJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.MessageCatalogList'));
    var _selectedMessageCatalogId = -1;

    var _permissions = [@ViewBag.PermissionList];

    function LoadMessageCatalogListIntoTable() {

        var messageCatalogDataSet = $('#datatable-responsive').DataTable();
        messageCatalogDataSet.clear();

        for (var i in _messageCatalogJSONObjs) {
            messageCatalogDataSet.row.add([
                parseInt(i)+1,
                _messageCatalogJSONObjs[i].Name,
                _messageCatalogJSONObjs[i].Description,
                (_messageCatalogJSONObjs[i].ChildMessageFlag ? '' : '<i class="zmdi zmdi-circle text-success"></i> <span class="name"> Master</span>')
            ]).draw(false);
        }
        messageCatalogDataSet.columns.adjust().draw();
    }

    function CleanFormInput() {
        $("#cName").val('');
        $('#cDescription').val('');
        $('#cChildMessageFlag').attr('checked', false);
    }

    function RefreshMessageCatalogTable() {
        $.ajax({
            type: "POST",
            url: "/Message/ReqAction?action=getmessagecatalog" + "&t=" + Date.now(),
            data: null,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                _messageCatalogJSONObjs = $.parseJSON(data.replace(/&quot;/g, '\"'));
                LoadMessageCatalogListIntoTable();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("Session Expired. Please Re-Login.");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }

    function OnSelectMessageCatalogItem(messageCatalogId) {
        $('#panel_detail').css("display", "block");
        $('#DeleteMessageCatalogButton').css("display", "inline");
        $('#UpdateMessageCatalogButton').css("display", "inline");
        $('#AddNewMessageCatalogButton').css("display", "inline");
        $('#EditingPanelTitle').html("[[[Detail]]]");
        $('#SubmitNewMessageCatalogButton').css("display", "none");
        $('#CancelAddNewMessageCatalogButton').css("display", "none");
        $('#cChildMessageFlag').prop("disabled", true);
        _selectedMessageCatalogId = messageCatalogId;
        CleanFormInput();
        for (var i in _messageCatalogJSONObjs) {
            if (_messageCatalogJSONObjs[i].Id == _selectedMessageCatalogId) {
                $('#cName').val(_messageCatalogJSONObjs[i].Name);
                $('#cDescription').val(_messageCatalogJSONObjs[i].Description);
                $('#cChildMessageFlag').prop('checked', eval(_messageCatalogJSONObjs[i].ChildMessageFlag));
                break;
            }
        }
    }

    function DoMessageCatalogTransactionAjax(actionName, Id, postData) {
        var endPoint = "/Message/ReqAction?action=" + actionName;
        if (Id >= 0)
            endPoint = endPoint + "&Id=" + Id;
        $.ajax({
            type: "POST",
            url: endPoint + "&t=" + Date.now(),
            data: postData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                RefreshMessageCatalogTable();
                _selectedMessageCatalogId = -1;
                toastr["success"]("[[[Action Completed]]]. (" + data + ")");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                if (XMLHttpRequest.status == 401) {
                    toastr["error"]("[[[Session Expired. Please Re-Login]]].");
                    setTimeout(function () { sfBacktoHomeIndex(); }, 2000);
                }
                else
                    toastr["error"]("Error");
            }
        });
    }
    function checkPermission() {
        var piority = -1;
        for (var i in _permissions) {
            if (_permissions[i] == 0) {  //Admin
                piority = 2;
                break;
            }
            if (_permissions[i] == 40) {  //Msg View
                piority = 1;
            }
            if (_permissions[i] == 41) {  //Msg Edit
                piority = 2;
                break;
            }
        }
        if (piority == 1) {  //only View
            $('#DeleteMessageCatalogButton').css("display", "none");
            $('#UpdateMessageCatalogButton').css("display", "none");
            $('#AddNewMessageCatalogButton').css("display", "none");
        }

    }

    TableManageButtons.init();
    checkPermission();
    LoadMessageCatalogListIntoTable();

    $(document).ready(function () {
        var table = $('#datatable-responsive').DataTable();
        $('#datatable-responsive #MessageCatalogList').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
            OnSelectMessageCatalogItem(_messageCatalogJSONObjs[table.row(this).index()].Id);
        });

        function dataValidation(postData) {
            if ($("#cName").val().length != 0) {
                postData.append('Name', $("#cName").val());
            } else {
                $("#cName").focus();
                swal("[[[Invalid]]] !", "[[[Name is necessary]]].");
                return {
                    postData: postData,
                    isValidated: false
                };
            }

            if ($("#cDescription").val().length != 0)
                postData.append('Description', $("#cDescription").val());

            postData.append('ChildMessageFlag', $("#cChildMessageFlag").is(":checked")?true:false);

            return {
                postData: postData,
                isValidated: true
            }
        }

        $('#AddNewMessageCatalogButton').click(function () {
            $('#panel_detail').css("display", "block");

            $('#EditingPanelTitle').html("[[[Add]]] [[[New]]] [[[MessageCatalog]]]");
            $('#DeleteMessageCatalogButton').css("display", "none");
            $('#UpdateMessageCatalogButton').css("display", "none");
            $('#CancelAddNewMessageCatalogButton').css("display", "inline");
            $('#cChildMessageFlag').prop("disabled", false);

            $('#SubmitNewMessageCatalogButton').css("display", "inline");

            $('#AddNewMessageCatalogButton').css("display", "none");
            CleanFormInput();
            $("#cName").focus();
        });

        $('#CancelAddNewMessageCatalogButton').click(function () {
            $('#panel_detail').css("display", "none");
            $('#EditingPanelTitle').html("[[[Detail]]]");
            $('#DeleteMessageCatalogButton').css("display", "inline");
            $('#UpdateMessageCatalogButton').css("display", "inline");
            $('#CancelAddNewMessageCatalogButton').css("display", "none");
            $('#SubmitNewMessageCatalogButton').css("display", "none");

            $('#AddNewMessageCatalogButton').css("display", "inline");
            CleanFormInput();
            window.scrollTo(0, 0);
        });

        $('#SubmitNewMessageCatalogButton').click(function () {
            var postData = new FormData();
            var result = dataValidation(postData);

            if (result.isValidated) {
                swal({
                    title: "[[[Are you sure]]]?",
                    text: "",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-success waves-effect waves-light',
                    confirmButtonText: '[[[Submit]]]!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoMessageCatalogTransactionAjax("addmessageCatalog", -1, result.postData);

                        $('#panel_detail').css("display", "none");
                        $('#EditingPanelTitle').html("[[[Detail]]]");
                        $('#DeleteMessageCatalogButton').css("display", "inline");
                        $('#UpdateMessageCatalogButton').css("display", "inline");
                        $('#CancelAddNewMessageCatalogButton').css("display", "none");
                        $('#SubmitNewMessageCatalogButton').css("display", "none");

                        $('#AddNewMessageCatalogButton').css("display", "inline");

                        CleanFormInput();
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#DeleteMessageCatalogButton').click(function () {
            if (_selectedMessageCatalogId < 0)
                toastr["error"]("[[[No Message Catalog Select]]].");
            else {
                swal({
                    title: "Are you sure?",
                    text: "",
                    type: "error",
                    showCancelButton: true,
                    confirmButtonClass: 'btn-danger waves-effect waves-light',
                    confirmButtonText: 'Delete!'
                }, function (isConfirm) {
                    if (isConfirm) {
                        DoMessageCatalogTransactionAjax("deletemessageCatalog", _selectedMessageCatalogId, null);
                        CleanFormInput();
                        $('#panel_detail').css("display", "none");
                        window.scrollTo(0, 0);
                    }
                });
            }
        });

        $('#UpdateMessageCatalogButton').click(function () {
            if (_selectedMessageCatalogId < 0)
                toastr["error"]("[[[No Message Catalog Select]]].");
            else {
                var postData = new FormData();
                var result = dataValidation(postData);

                if(result.isValidated){
                    swal({
                        title: "[[[Are you sure]]]?",
                        text: "",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-warning waves-effect waves-light',
                        confirmButtonText: '[[[Update]]]!'
                    }, function (isConfirm) {
                        if (isConfirm) {
                            DoMessageCatalogTransactionAjax("updatemessageCatalog", _selectedMessageCatalogId, result.postData);
                            $('#panel_detail').css("display", "none");
                        }
                    });
                }
            }
        });
    });
</script>

