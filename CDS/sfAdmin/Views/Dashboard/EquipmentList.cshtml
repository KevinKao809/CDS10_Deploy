
@{
    ViewBag.Title = "Dashboard / Equipment";
}

<!-- SignalR -->
<script src="/Scripts/jquery.signalR-2.2.1.js"></script>
<script src="/signalr/hubs"></script>

<script type="text/javascript">
    $(function () {
        var hub = $.connection.RTMessageHub;
        hub.client.onReceivedMessage = function (message) {
            var EquipmentMessage = $.parseJSON(message);
            if (EquipmentMessage.equipmentId != '') {
                UpdateEquipmentBoard(EquipmentMessage.equipmentId, EquipmentMessage);
            }
        };

        $.connection.hub.start().done(function () {
            hub.server.register('@ViewBag.CompanyId');
        });
    })
</script>

<div class="row">
    <div class="card-box table-responsive">
        <div style="float:left">
            <h4 class="header-title m-t-0 m-b-30">[[[Dashboard]]] / [[[Equipment]]]</h4>
        </div>
        <div class="col-sm-12">
            <table id="datatable-responsive" name="EquipmentListTable" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                    <tr>
                        <th>[[[No]]]</th>
                        <th>[[[Factory]]] [[[Name]]]</th>
                        <th>[[[Equipment]]] [[[Class]]]</th>
                        <th>[[[Name]]]</th>
                        <th>[[[Status]]]</th>
                        <th>[[[Dashboard]]]</th>
                        <th>[[[Last Update]]]</th>
                    </tr>
                </thead>

                <tbody id="EquipmentList"></tbody>
            </table>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->

<form id="openDashboardForm" name="openDashboardForm" method="post" target="_blank" action="/Dashboard/EquipmentClassDashboard">
    <input type="hidden" id="equipmentId" name="equipmentId" />
</form>

<script type="text/javascript">
    var _equipmentJSONObjs = $.parseJSON(jsonStringFilter('@ViewBag.EquipmentList'));
    var _equipmentDataSet;
    var _permissions = [@ViewBag.PermissionList];
    var _showChecking = '<button class="btn btn-inverse disabled waves-effect waves-light btn-xm m-b-5" style="width:120px;"> [[[Checking]]]... </button>';
    var _showRunning = '<button class="btn btn-success disabled waves-effect waves-light btn-xm m-b-5" style="width:120px;"> [[[Running]]] </button>';
    var _showIdle = '<button class="btn btn-warning disabled waves-effect waves-light btn-xm m-b-5" style="width:120px;"> [[[Idle]]] </button>';
    var _showStop = '<button class="btn btn-danger disabled waves-effect waves-light btn-xm m-b-5" style="width:120px;"> [[[Stop]]] </button>';
    var _showDisconnect = '<button class="btn btn-default disabled  waves-effect waves-light btn-xm m-b-5" style="width:120px;"> [[[Disconnect]]] </button>';
    var _disconnectionCheckIntervalInSec = 10;

    function LoadEquipmentListIntoTable() {
        _equipmentDataSet = $('#datatable-responsive').DataTable();
        var DTNow = new Date();

        for (var i in _equipmentJSONObjs) {
            _equipmentDataSet.row.add([
                parseInt(i) + 1,
                _equipmentJSONObjs[i].FactoryName,
                _equipmentJSONObjs[i].EquipmentClassName,
                _equipmentJSONObjs[i].Name,
                _showChecking,
                '<button onclick=\"javascript:LanuchDashboard(' + _equipmentJSONObjs[i].Id + ')\" class="btn btn-default waves-effect waves-light btn-xm m-b-5">[[[Dashboard]]]</button>',
                sfDateToString(DTNow)
            ]).draw(false);
        }
        _equipmentDataSet.columns.adjust().draw();
    }

    LoadEquipmentListIntoTable();

    function CheckEquipmentDisconnect() {
        var nowDT = new Date();
        for (var i = 0; i < _equipmentDataSet.rows().count(); i++)
        {
            var lastUpdated = sfStringToDate(_equipmentDataSet.cell(i, 6).data());
            var difInSec = (nowDT.getTime() - lastUpdated.getTime()) / 1000;
            if (difInSec > _equipmentJSONObjs[i].MaxIdleInSec)
            {
                 var updateData = [
                    _equipmentDataSet.cell(i, 0).data(),
                    _equipmentDataSet.cell(i, 1).data(),
                    _equipmentDataSet.cell(i, 2).data(),
                    _equipmentDataSet.cell(i, 3).data(),
                    _showDisconnect,
                    '<button onclick=\"javascript:LanuchDashboard(' + _equipmentJSONObjs[i].Id + ')\" class="btn btn-default waves-effect waves-light btn-xm m-b-5">[[[Dashboard]]]</button>',
                    sfDateToString(nowDT)];

                UpdateDataTableByRowId(i, updateData);
            }
        }
    }

    function UpdateEquipmentBoard(EquipmentId, EquipmentMessage)
    {
        var nowDT = new Date();
        for (var i = 0; i < _equipmentDataSet.rows().count(); i++)
        {
            if (_equipmentJSONObjs[i].EquipmentId == EquipmentId)
            {
                var status = _showDisconnect, dashboard = "";
                dashboard = '<button onclick=\"javascript:LanuchDashboard(' + _equipmentJSONObjs[i].Id + ')\" class="btn btn-success waves-effect waves-light btn-xm m-b-5">[[[Dashboard]]]</button>';
                if (EquipmentMessage.equipmentRunStatus == 1)
                    status = _showRunning;                
                else if (EquipmentMessage.equipmentRunStatus == 0)
                    status = _showIdle;
                else if (EquipmentMessage.equipmentRunStatus == -1)
                    status = _showStop;
                var updateData = [
                    _equipmentDataSet.cell(i, 0).data(),
                    _equipmentDataSet.cell(i, 1).data(),
                    _equipmentDataSet.cell(i, 2).data(),
                    _equipmentDataSet.cell(i, 3).data(),
                    status,
                    dashboard,
                    sfDateToString(nowDT)];

                UpdateDataTableByRowId(i, updateData);
                break;
            }
        }
    }

    function UpdateDataTableByRowId(rowID, updateData)
    {
        var currentPageNum = _equipmentDataSet.page.info().page;
        _equipmentDataSet.row(rowID).data(updateData).page(currentPageNum).draw('page'); 
        //_equipmentDataSet.row(rowID).data(updateData).draw(true);        
    }

    function LanuchDashboard(EquipId)
    {
        document.getElementById('equipmentId').value = EquipId;
        var dashboardForm = document.getElementById('openDashboardForm');
        dashboardForm.submit();
    }

    $(document).ready(function () {
        //$('#datatable-responsive #EquipmentList').on('click', 'tr', function () {
        //    if ($(this).hasClass('selected')) {
        //        $(this).removeClass('selected');
        //    }
        //    else {
        //        $('tr.selected').removeClass('selected');
        //        $(this).addClass('selected');
        //    }
        //});

        setInterval(function () { CheckEquipmentDisconnect() }, (_disconnectionCheckIntervalInSec*1000));
    });
</script>